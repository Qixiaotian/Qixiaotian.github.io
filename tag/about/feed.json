{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"about\" tag",
    "description": "smile everyDay",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2020/11/23/ie%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98/",
            "url": "http://example.com/2020/11/23/ie%E5%85%BC%E5%AE%B9%E6%80%A7%E9%97%AE%E9%A2%98/",
            "title": "Ie兼容性问题",
            "date_published": "2020-11-23T12:46:25.000Z",
            "content_html": "<h6 id=\"浏览器兼容是一件很头疼的事其中又属-ie8-现在整理一下常遇到的问题和解决方式后期会陆续更新\"><a class=\"markdownIt-Anchor\" href=\"#浏览器兼容是一件很头疼的事其中又属-ie8-现在整理一下常遇到的问题和解决方式后期会陆续更新\">#</a> 浏览器兼容是一件很头疼的事，其中又属 ie8 现在整理一下常遇到的问题和解决方式，后期会陆续更新。。。</h6>\n<p>js 涉及的统计一下：</p>\n<ol>\n<li>IE8 兼容 console.log</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">window</span>.console =</span><br><span class=\"line\">  <span class=\"built_in\">window</span>.console ||</span><br><span class=\"line\">  (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> c = &#123;&#125;;</span><br><span class=\"line\">    c.log = c.warn = c.debug = c.info = c.error = c.time = c.dir = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">  &#125;)();</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>String.trim () 方法，去除空格事件不能够兼容 iE8,9</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">String</span>.prototype.trim) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">String</span>.prototype.trim = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">trim</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.replace(<span class=\"regexp\">/^\\s+|\\s+$/g</span>, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>\n<p>oninput,onchange,onpropertychange<br>\n<strong>oninput</strong> 事件 ：当前对象属性发生改变，都会触发事件（非 ie）<br>\n<strong>onpropertychange</strong> ：是 ie 版本<br>\n在 input 中，如果想捕获用户的键盘输入，用 onkeyup 检查事件就可以了，但是 onkeyup 并不支持复制和粘贴，因此需要动态监测 textarea 中值的变化，这就需要 onpropertychange（用在 IE 浏览器）和 oninput（非 IE 浏览器）结合在一起使用:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ev.on(ele, <span class=\"string\">&quot;input propertychange&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// do something</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>placeholder  <code>https://github.com/mathiasbynens/jquery-placeholder</code> <br>\nIE8 下不支持 HTML5 属性 placeholder，不过为解决此问题的 js 插件挺多的，比如：jquery-placeholder。</p>\n</li>\n<li>\n<p>在谷歌浏览器中点击事件 onclick 默认会触发 onmouseout 和 onmouseleave</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (event.relatedTarget != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">//doSomeThing()</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>该属性不支持 IE, 但 ie 不会出现谷歌这种情况 2. Css 涉及的统计一下：</p>\n<ol>\n<li>ie 不兼容 border-radius</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-webkit-border-radius: <span class=\"number\">3</span>px;</span><br><span class=\"line\">-moz-border-radius: <span class=\"number\">3</span>px;</span><br><span class=\"line\">border-radius: <span class=\"number\">3</span>px;</span><br><span class=\"line\">behavior: url(<span class=\"string\">&#x27;../lib/PIE-1.0.0/PIE.htc&#x27;</span>);    <span class=\"comment\">/*引用PIE.htc文件的路径*/</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>text-overflow 文本溢出</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">overflow</span>: <span class=\"selector-tag\">hidden</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">white-space</span>: <span class=\"selector-tag\">nowrap</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">-o-text-overflow</span>: <span class=\"selector-tag\">ellipsis</span>; <span class=\"comment\">/* for Opera */</span></span><br><span class=\"line\"><span class=\"selector-tag\">text-overflow</span>: <span class=\"selector-tag\">ellipsis</span>; <span class=\"comment\">/* for IE */</span></span><br></pre></td></tr></table></figure>\n<p>3. 不兼容 line-height</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">line-height</span>: 32<span class=\"selector-tag\">px</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">line-height</span>: 32<span class=\"selector-tag\">px</span>\\9; <span class=\"comment\">/*IE8*/</span></span><br><span class=\"line\">*<span class=\"selector-tag\">line-height</span>: 32<span class=\"selector-tag\">px</span>; <span class=\"comment\">/* IE7支持 */</span></span><br><span class=\"line\">_<span class=\"selector-tag\">line-height</span>: 32<span class=\"selector-tag\">px</span>; <span class=\"comment\">/* IE6支持 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">-ms-line-height</span>: 32<span class=\"selector-tag\">px</span>; <span class=\"comment\">/*IE9+支持*/</span></span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-line-height</span>: 32<span class=\"selector-tag\">px</span>; <span class=\"comment\">/*chrome safair*/</span></span><br><span class=\"line\"><span class=\"selector-tag\">-moz-line-height</span>: 32<span class=\"selector-tag\">px</span>; <span class=\"comment\">/*火狐*/</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>兼容 html5 标签和 css3 的一些属性<br>\n html5shiv.js、html5media.js、respond.js<br>\nmodernizr（一款兼容 css3、html5 等元素的插件）</li>\n<li>box-shadow</li>\n</ol>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**filter:--低于ie8的--*/</span></span><br><span class=\"line\">-ms-filter: &quot;progid:DXImageTransform.Microsoft.Shadow(color=#CCCCCC,direction=0,strength=6) </span><br><span class=\"line\">　　　　　　  progid:DXImageTransform.Microsoft.Shadow(color=#CCCCCC,direction=90,strength=6) </span><br><span class=\"line\">　　　　　　　progid:DXImageTransform.Microsoft.Shadow(color=#CCCCCC,direction=180,strength=6) </span><br><span class=\"line\">　　　　　　　progid:DXImageTransform.Microsoft.Shadow(color=#CCCCCC,direction=270,strength=6)&quot;;</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>rgba () 和 opacity:<br>\nopacity：不能实现元素透明文字不透明的效果</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">opacity</span>: 0<span class=\"selector-class\">.5</span>;</span><br><span class=\"line\"><span class=\"comment\">/** ie： filter:Alpha(opacity=x) */</span></span><br></pre></td></tr></table></figure>\n<p>rgba ：实现元素透明文字不透明的效果</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">background</span>: <span class=\"selector-tag\">rgba</span>(255, 255, 255, 0<span class=\"selector-class\">.1</span>);</span><br><span class=\"line\">filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#19ffffff,endColorstr=#19ffffff);</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "about"
            ]
        },
        {
            "id": "http://example.com/2020/11/23/Ajax%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6/",
            "url": "http://example.com/2020/11/23/Ajax%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6/",
            "title": "Ajax运行原理",
            "date_published": "2020-11-23T07:42:00.000Z",
            "content_html": "<h1 id=\"ajax\"><a class=\"markdownIt-Anchor\" href=\"#ajax\">#</a> AJAX</h1>\n<h2 id=\"服务器与客户端\"><a class=\"markdownIt-Anchor\" href=\"#服务器与客户端\">#</a> 服务器与客户端</h2>\n<h3 id=\"服务器server\"><a class=\"markdownIt-Anchor\" href=\"#服务器server\">#</a> 服务器（server）</h3>\n<p>我们如果想把自己的网页，让其它人能够访问，就必须要用到服务器的知识了。</p>\n<h4 id=\"作用\"><a class=\"markdownIt-Anchor\" href=\"#作用\">#</a> 作用</h4>\n<p>服务器是一个非常重要的概念，做为一名前端人员，我们在实现的工作过程可能不会直接与服务器打交道，但是，我们应该理解所有的应用都需要有服务器的支持。</p>\n<p>比如：生活中我们也会听到服务器这三个字。</p>\n<p>（一台服务器服务于多台设备）</p>\n<p>简单来理解：</p>\n<blockquote>\n<p>服务器 = 硬件配置高的电脑 + 安装特殊软件</p>\n</blockquote>\n<p>是提供服务的机器。给其它设备（电脑，手机，平板…）提供某种特殊服务的电脑</p>\n<h4 id=\"服务器的分类\"><a class=\"markdownIt-Anchor\" href=\"#服务器的分类\">#</a> 服务器的分类</h4>\n<p>简单来理解：</p>\n<blockquote>\n<p>服务器 = 硬件配置高的电脑 + 安装特殊软件</p>\n</blockquote>\n<p>安装的软件不同，它能提供的服务也不同。 根据所能提供的服务不同，可分成很多种：</p>\n<ul>\n<li>\n<p>web 服务器： 安装了能提供 <code>web服务</code> 的软件。如 iis, nginx, apache 等。</p>\n</li>\n<li>\n<p>ftp……: 上传文件</p>\n</li>\n</ul>\n<h3 id=\"客户端client\"><a class=\"markdownIt-Anchor\" href=\"#客户端client\">#</a> 客户端（client)</h3>\n<p>客户端：连接到服务器，享受服务的设备，就是客户端。</p>\n<h3 id=\"访问-web-服务器的基本流程\"><a class=\"markdownIt-Anchor\" href=\"#访问-web-服务器的基本流程\">#</a> 访问 web 服务器的基本流程</h3>\n<h4 id=\"商场买电脑的过程\"><a class=\"markdownIt-Anchor\" href=\"#商场买电脑的过程\">#</a> 商场买电脑的过程</h4>\n<p>商场买东西</p>\n<p>1. 定位商场的地址</p>\n<p>2. 到商场，告诉专卖店你的需要</p>\n<p>3. 给你电脑</p>\n<p>4. 回家使用电脑</p>\n<h4 id=\"访问-web-服务器\"><a class=\"markdownIt-Anchor\" href=\"#访问-web-服务器\">#</a> 访问 web 服务器</h4>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20200218111736915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTE3NjQxNQ==,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>\n（请求响应流程示意图）</p>\n<p>基本流程</p>\n<ol>\n<li>\n<p>确认地址。用户在浏览器（客户端）地址栏输入要访问的网站网址（URL）</p>\n</li>\n<li>\n<p>发送请求。浏览器向服务器发送请求 (request)，告知服务器要获取的内容</p>\n</li>\n<li>\n<p>获取响应。服务端收到浏览器发送的请求，并把处理的结果返回给浏览器 (response)</p>\n</li>\n<li>\n<p>显示内容。浏览器将服务端返回的结果显示到界面上</p>\n</li>\n</ol>\n<h3 id=\"本地虚拟-web-服务器\"><a class=\"markdownIt-Anchor\" href=\"#本地虚拟-web-服务器\">#</a> 本地虚拟 web 服务器</h3>\n<p>为了方便学习，我们会在自己的电脑上安装服务器软件，把自己的电脑虚拟成服务器。换句话说，我们的电脑既是客户端，又是服务器。</p>\n<p>我们需要提供 web 服务：让其它同学能够访问我们网页。</p>\n<blockquote>\n<p>web 服务器 = 硬件配置高的电脑 + web 软件（如 iis,apache, nginx）</p>\n</blockquote>\n<p>方法：</p>\n<ul>\n<li>安装特殊的 web 软件：iis apache nginx</li>\n<li>安装 vscode 的插件 live-server</li>\n<li>安装  <code>Teseve</code></li>\n<li>使用第三方的集成软件 app_server, phpStudy 等</li>\n<li><code>使用黑盒工具app.exe</code></li>\n</ul>\n<p>其它任何一种方法都可以把你的电脑虚拟成服务器，让其它同学来访问。</p>\n<h4 id=\"介绍黑盒服务器\"><a class=\"markdownIt-Anchor\" href=\"#介绍黑盒服务器\">#</a> 介绍黑盒服务器</h4>\n<p>参见具体的文档。</p>\n<ul>\n<li>\n<p>启动软件</p>\n<ul>\n<li>注意观察端口号。以 3005 为例。</li>\n</ul>\n</li>\n<li>\n<p>访问网页</p>\n<ol>\n<li>先准备文件。把网页放在 public 文件夹下。</li>\n<li>访问：\n<ol>\n<li>方法一：<span class=\"exturl\" data-url=\"aHR0cDovL2xvY2FsaG9zdDozMDA1L2luZGV4Lmh0bWw=\">http://localhost:3005/index.html</span></li>\n<li>方法二：<span class=\"exturl\" data-url=\"aHR0cDovL3huLS04cHYyYQ==\">http:// 本机</span> ip/index.html</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>\n<p>访问数据</p>\n<p>行话也称为接口。get 类型的接口可以直接在浏览器中观看效果。</p>\n</li>\n</ul>\n<h3 id=\"ajax-技术的好处\"><a class=\"markdownIt-Anchor\" href=\"#ajax-技术的好处\">#</a> AJAX 技术的好处</h3>\n<p>总结如下两点好处：</p>\n<ol>\n<li>\n<p>局部更新，提升用户体验，提升性能。</p>\n</li>\n<li>\n<p>分离开发，提高开发效率。在项目实际开发过程中，ajax 是一个必不可少的技术，是前后端分离开发的基础。</p>\n<ol>\n<li>后端同学提供接口。这个接口我们可以理解是一个 <code>函数</code> ：它的内部进行业务处理，数据库访问等等操作，并返回结果。如何去实现这函数的功能就是后端同学的任务了。</li>\n<li>前端同学调用接口获取数据（有其特定的格式），然后再把数据转化成的图文并茂的网页。</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"通过-network-面板来观察-ajax\"><a class=\"markdownIt-Anchor\" href=\"#通过-network-面板来观察-ajax\">#</a> 通过 network 面板来观察 AJAX</h3>\n<p>掌握：</p>\n<ul>\n<li>network 面板</li>\n<li>all / xhr</li>\n<li>response</li>\n</ul>\n<h3 id=\"ajax-是什么\"><a class=\"markdownIt-Anchor\" href=\"#ajax-是什么\">#</a> ajax 是什么</h3>\n<p>AJAX ，全称是：<strong>A</strong>synchronous <strong>J</strong>avaScript <strong>A</strong>nd <strong>X</strong>ml 。 （async：表示异步，sync：表示同步）</p>\n<ul>\n<li>异步的 JavaScript 和 XML。</li>\n<li>是一种创建交互式网页应用的网页开发技术。并不是一种新技术，而是一种解决方案，早在在 1998 年就开始使用。</li>\n<li>异步表示不阻塞：浏览器在请求数据时，并不会阻塞用户后续的操作。理解为浏览器派了一个小弟去服务器拿数据了。</li>\n<li>XML 表示一种数据格式，最初设计 AJAX 时，从服务器返回的数据是 XML 格式的，后面慢慢被 JSON 数据格式取代了。</li>\n<li>更具体一点， <code>浏览器</code> 通过内置对象  <code>XMLHttpRequest</code>  向服务器发起请求，并可以接收服务器返回给浏览器的数据，这一过程或实现这一过程的技术就是我们所说的 Ajax。</li>\n</ul>\n<h2 id=\"使用-jquery-提供的-ajax-功能\"><a class=\"markdownIt-Anchor\" href=\"#使用-jquery-提供的-ajax-功能\">#</a> 使用 jQuery 提供的 AJAX 功能</h2>\n<h3 id=\"jquery-体验-ajax\"><a class=\"markdownIt-Anchor\" href=\"#jquery-体验-ajax\">#</a> jquery 体验 ajax</h3>\n<p>第一个 $.ajax 请求：获取服务器上的时间 <code>common/getCurrentTime</code></p>\n<p>基本流程：</p>\n<ol>\n<li>\n<p>准备工作</p>\n<p>确保服务器端是已经就绪的。直接在地址栏中使用接口，测试接口 <code>common/getCurrentTime</code></p>\n</li>\n<li>\n<p>新建页面，引入 jquery。</p>\n</li>\n<li>\n<p>参考给定的 $.ajax 格式，发送请求。</p>\n<ol>\n<li>讲解回调函数的含义。</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"ajax的基本格式\"><a class=\"markdownIt-Anchor\" href=\"#ajax的基本格式\">#</a> $.ajax () 的基本格式</h4>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(</span><br><span class=\"line\">  url, <span class=\"comment\">//  &#x27;/common/getCurrentTime&#x27;,</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    type: <span class=\"string\">&quot;get&quot;</span>, <span class=\"comment\">// post</span></span><br><span class=\"line\">    data: &#123; <span class=\"attr\">id</span>: <span class=\"number\">1</span> &#125;,</span><br><span class=\"line\">    success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">result</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(result);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"comment\">// - url : 表示请求的地址，可以省略域名。</span></span><br><span class=\"line\"><span class=\"comment\">// - type: 表示请求的类型，常见取值 get，post。如果不写，默认为&#x27;get&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// - data: 表示发送请求时附加的参数，如果没有参数，可省略</span></span><br><span class=\"line\"><span class=\"comment\">// - success：它是一个回调函数。当请求成功之后会自动调用这个函数，它的第一个参数是服务器端返回的数据。</span></span><br></pre></td></tr></table></figure>\n<p>还有其它的配置项，我们在后面再去学习。</p>\n<h4 id=\"回调函数callback-functions\"><a class=\"markdownIt-Anchor\" href=\"#回调函数callback-functions\">#</a> 回调函数 (Callback Functions)</h4>\n<p>作用：用于对特定的事件或条件进行响应。</p>\n<p>两层含义：</p>\n<pre><code>- 1. 函数。表示它是一个函数，是可以被执行的，能做具体操作的函数。\n- 2. 回调。在某个时刻，或者某个事件发生`自动去调用这个函数`。\n</code></pre>\n<p>代码示例：</p>\n<p>​ 如下均是回调函数的使用</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">$(<span class=\"string\">&quot;#btn&quot;</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">[].sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>)</span>&#123; <span class=\"keyword\">return</span> a - b;&#125;)</span><br><span class=\"line\">[<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>].forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item,index,self</span>)</span>&#123;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ok</span>(<span class=\"params\">result</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(result)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$.ajax(</span><br><span class=\"line\">  url,<span class=\"comment\">//  &#x27;/common/getCurrentTime&#x27;,</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">     type: <span class=\"string\">&#x27;get&#x27;</span>,<span class=\"comment\">// post</span></span><br><span class=\"line\">     data: &#123;<span class=\"attr\">id</span>:<span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">     success: ok</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>注意：</p>\n<p>​ 一般情况下，回调函数都是匿名函数。但，也是可以给它们起名字的。</p>\n<h3 id=\"带参数的-get-请求\"><a class=\"markdownIt-Anchor\" href=\"#带参数的-get-请求\">#</a> 带参数的 get 请求</h3>\n<h4 id=\"用户名检测\"><a class=\"markdownIt-Anchor\" href=\"#用户名检测\">#</a> 用户名检测</h4>\n<p>上一个基本示例中，我们的请求并没有带上参数，而在真实的开发中，我们的请求经常是要带参数的。你可以理解为用户名占用检测这个案例就来解决请求接口要带参数的问题。并且用户名占用检测也是一个比好</p>\n<p>[外链图片转存失败，源站可能有防盗链机制，建议将图片保存下来直接上传 (img-FBJ848MI-1581995138719)(ajax 讲义.assets/ 案例 - 用户名检测.gif)]</p>\n<p>目标：仿照<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hY2NvdW50LmNuYmxvZ3MuY29tL3NpZ251cA==\">博客园注册</span>，实现用户名占用检测效果；学习使用带参数的 get 请求；</p>\n<ol>\n<li>\n<p>测试接口。直接在地址栏中使用接口（common/checkUser），注意在问号后附加参数的问题</p>\n</li>\n<li>\n<p>给出静态代码</p>\n</li>\n<li>\n<p>分析要实现的功能；</p>\n</li>\n<li>\n<p>两种方法传参：</p>\n<ul>\n<li>在 url 中拼接参数实现</li>\n</ul>\n</li>\n</ol>\n<ul>\n<li>介绍 $.ajax 的参数中的 data 值，可以简化自己拼接参数的过程。</li>\n</ul>\n<h3 id=\"jquery-ajax-post\"><a class=\"markdownIt-Anchor\" href=\"#jquery-ajax-post\">#</a> jquery-ajax-post</h3>\n<h2 id=\"常见的两种请求方式-get-post\"><a class=\"markdownIt-Anchor\" href=\"#常见的两种请求方式-get-post\">#</a> 常见的两种请求方式 get-post</h2>\n<ul>\n<li>get</li>\n<li>post</li>\n</ul>\n<h3 id=\"字面理解\"><a class=\"markdownIt-Anchor\" href=\"#字面理解\">#</a> 字面理解</h3>\n<ul>\n<li>\n<p>不同点：</p>\n<ul>\n<li>get ：获取，得到。这种方式请求用于向服务器请求资源（图片，文件，数据…）。它是最常见的请求方式。它的重点在于，它只是请求，而 <code>不会改变</code> 服务器上的资源。</li>\n<li>post：派送，投递。这种方式的请求用于向服务器上提交数据，它的重点在于，它 <code>可能会修改</code> 服务器上的资源。</li>\n</ul>\n</li>\n<li>\n<p>相同点</p>\n<ul>\n<li>get 和 post 请求都可以在发请求时附带一些数据。例如：根据用户名去检查这个用户是否被占用；在论坛中注册一个账号。</li>\n<li>get 和 post 请求都能够从服务器上获取返回的数据。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"实操对比\"><a class=\"markdownIt-Anchor\" href=\"#实操对比\">#</a> 实操对比</h3>\n<p>get 传数据直接显示在 url 中</p>\n<pre><code>-  query string parameters\n</code></pre>\n<p>post 传递数据更安全</p>\n<ul>\n<li>form Data</li>\n</ul>\n<h3 id=\"常用场景\"><a class=\"markdownIt-Anchor\" href=\"#常用场景\">#</a> 常用场景</h3>\n<p>常见的应用场景适用于 get 还是 post?</p>\n<ul>\n<li>查看商品详情 (get)</li>\n<li>把一件商品放入购物车 (post)</li>\n<li>修改登陆密码 (post)</li>\n<li>发表一个帖子 (post)</li>\n<li>删除一个用户 (post)</li>\n</ul>\n<p>注意：在实际的开发过程中，由于接口是后端同学已经给定的，所以，可能它们能够支持多种请求方式，也可以只支持其中一种。</p>\n<h2 id=\"jqueryajax-实现留言板\"><a class=\"markdownIt-Anchor\" href=\"#jqueryajax-实现留言板\">#</a> JQuery.ajax 实现留言板</h2>\n<p>目标： 通过 <code>message/addMsg</code>  和 <code>message/getMsg</code>  这两个接口，实现一个动态的留言板功能</p>\n<p>基本内容：</p>\n<ol>\n<li>效果展示及功能分析</li>\n<li>获取留言</li>\n<li>发送留言</li>\n<li>小结</li>\n</ol>\n<h3 id=\"获取留言并显示\"><a class=\"markdownIt-Anchor\" href=\"#获取留言并显示\">#</a> 获取留言并显示</h3>\n<p>基本流程</p>\n<p>发送请求</p>\n<p>分析回来的数据</p>\n<p>使用 forEach 或者 for 循环进行数组遍历，并进行数据拼接</p>\n<p>修改显示区的 dom</p>\n<h3 id=\"模板字符串\"><a class=\"markdownIt-Anchor\" href=\"#模板字符串\">#</a> 模板字符串</h3>\n<p>在做字符串拼接时，使用 <code>+</code>  来拼接复杂内容是很麻烦的，而模板字符串可以解决这个问题。</p>\n<p>格式：` <code>$&#123;变量&#125;</code>   <code>$&#123;表达式&#125;</code> `</p>\n<p>语法：</p>\n<ul>\n<li>模板字符串使用反引号 <strong>`</strong>把内容括起来，类似于普通字符串的&quot;&quot;。</li>\n<li>${} 充当界定符的作用，其中可以写变量名，表达式等。</li>\n<li>允许字符串内部进行换行，代码更好读更好的体验</li>\n</ul>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> name = <span class=\"string\">&#x27;zs&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> age = <span class=\"number\">18</span>;</span><br><span class=\"line\"><span class=\"comment\">// 拼接多个变量，在模板字符串中使用占位的方式，更易懂</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> str = <span class=\"string\">`我是<span class=\"subst\">$&#123;name&#125;</span>，今年<span class=\"subst\">$&#123;age&#125;</span>`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 内容过多可以直接换行</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = [&#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;flex&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">20</span>&#125;,&#123;<span class=\"attr\">name</span>: <span class=\"string\">&#x27;james&#x27;</span>, <span class=\"attr\">age</span>: <span class=\"number\">21</span>&#125;];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"string\">&#x27;175cm&#x27;</span>, <span class=\"string\">&#x27;60kg&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> html = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">\t&lt;div&gt;</span></span><br><span class=\"line\"><span class=\"string\">\t\t&lt;ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">\t\t\t&lt;li&gt;<span class=\"subst\">$&#123;obj.name&#125;</span>&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">\t\t\t&lt;li&gt;<span class=\"subst\">$&#123;obj.age&#125;</span>&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">\t\t\t&lt;li&gt;<span class=\"subst\">$&#123;arr[<span class=\"number\">0</span>]&#125;</span>&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">\t\t\t&lt;li&gt;<span class=\"subst\">$&#123;arr[<span class=\"number\">1</span>]&#125;</span>&lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\">\t\t&lt;/ul&gt;</span></span><br><span class=\"line\"><span class=\"string\">\t&lt;/div&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"原生-ajax-的实现\"><a class=\"markdownIt-Anchor\" href=\"#原生-ajax-的实现\">#</a> 原生 ajax 的实现</h2>\n<p>在实际的开发中，我们会直接使用如 jquery 这样的第三方工具库来调用 ajax，而不会自己去手写一个原生的。但对于学习者来说，深入学习原生 ajax 能帮助我们更好的理解和掌握 。</p>\n<p>目标： 能 <code>手写ajax</code> ；掌握 XMLHttpRequest 的用法；</p>\n<h3 id=\"第一个原生的-ajax-请求\"><a class=\"markdownIt-Anchor\" href=\"#第一个原生的-ajax-请求\">#</a> 第一个原生的 ajax 请求</h3>\n<p>手写一个 ajax 请求，来获取服务器时间。</p>\n<p>4 步：</p>\n<ol>\n<li>new 一个 xhr 对象。</li>\n<li>设置请求信息。</li>\n<li>设置回调函数，处理请求结果。</li>\n<li>发送请求。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 第一步： 新建一个XMLHttpRequest对象(xhr)</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 第二步： 设置请求。 xhr.open(请求的方式，get|post, 请求的url地址);</span></span><br><span class=\"line\">xhr.open(<span class=\"string\">&quot;get&quot;</span>, <span class=\"string\">&quot;common/getCurrentTime&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 第三步：设置回调函数。返回的数据存放在xhr.responseText中。</span></span><br><span class=\"line\">xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">&quot;从服务器返回的数据&quot;</span>, xhr.responseText);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 第四步： 发送请求。 xhr.send()</span></span><br><span class=\"line\">xhr.send();</span><br></pre></td></tr></table></figure>\n<h3 id=\"理解-xmlhttprequest-对象\"><a class=\"markdownIt-Anchor\" href=\"#理解-xmlhttprequest-对象\">#</a> 理解 XMLHttpRequest 对象</h3>\n<ul>\n<li>ajax 的功能是基于 XMLHttpRequest 对象来实现的。</li>\n<li>它是内置对象，充当构造器使用。</li>\n<li>浏览器中的 network 中查看  <code>xhr</code></li>\n</ul>\n<p>属性和方法：</p>\n<ul>\n<li>open()</li>\n<li>send()</li>\n<li>onload(function(){})</li>\n<li>responseText</li>\n</ul>\n<h3 id=\"原生-ajax-带参数的-get\"><a class=\"markdownIt-Anchor\" href=\"#原生-ajax-带参数的-get\">#</a> 原生 ajax - 带参数的 get</h3>\n<p>get 带参数 - 检测用户名是否占用</p>\n<p>get 带参数的格式：附加在请求的 url 地址后面。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url?参数1&#x3D;值1&amp;参数2&#x3D;值2&amp;参数3&#x3D;值3...</span><br></pre></td></tr></table></figure>\n<ul>\n<li>？</li>\n<li>&amp;</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 第一步： 新建一个XMLHttpRequest对象(xhr)</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.info(xhr);</span><br><span class=\"line\"><span class=\"comment\">// 第二步： 设置请求。 xhr.open(请求的方式，get|post, 请求的url地址);</span></span><br><span class=\"line\">xhr.open(<span class=\"string\">&quot;get&quot;</span>, <span class=\"string\">&quot;common/checkuser?username=&quot;</span> + username);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 第三步： 发送请求。 xhr.send()</span></span><br><span class=\"line\">xhr.send();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 第四步： 设置回调函数。请求成功之后，获取服务器返回的数据.</span></span><br><span class=\"line\"><span class=\"comment\">// 返回的数据存放在xhr.responseText中。</span></span><br><span class=\"line\">xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">&quot;从服务器返回的数据&quot;</span>, xhr.responseText);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"原生-ajax-post-请求\"><a class=\"markdownIt-Anchor\" href=\"#原生-ajax-post-请求\">#</a> 原生 ajax-post 请求</h3>\n<h4 id=\"post-请求的格式\"><a class=\"markdownIt-Anchor\" href=\"#post-请求的格式\">#</a> post 请求的格式</h4>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1. 创建xhr对象</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\"><span class=\"comment\">//2. 初始化请求</span></span><br><span class=\"line\">xhr.open(<span class=\"string\">&quot;post&quot;</span>, 服务器地址);</span><br><span class=\"line\"><span class=\"comment\">//3. 设置请求头，固定写法</span></span><br><span class=\"line\">xhr.setRequestHeader(<span class=\"string\">&quot;Content-type&quot;</span>, <span class=\"string\">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">//4. 监听响应的回调函数</span></span><br><span class=\"line\">xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(xhr.responseText);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//5. 发送请求</span></span><br><span class=\"line\">xhr.send(<span class=\"string\">&quot;提交给服务器数据字符串&quot;</span>); <span class=\"comment\">// &#x27;a=1&amp;b=3&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>注意：</p>\n<ul>\n<li>要设置请求头</li>\n<li>提交给服务器的数据写在 send () 中。</li>\n</ul>\n<h4 id=\"案例用户登陆\"><a class=\"markdownIt-Anchor\" href=\"#案例用户登陆\">#</a> 案例：用户登陆 *</h4>\n<p>代码资料：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.container</span> &#123;</span></span><br><span class=\"line\">    width: 800px;</span><br><span class=\"line\">    padding: 2em;</span><br><span class=\"line\">    margin: 40px auto;</span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-tag\">border</span>: 1<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#ccc</span>;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"css\">  <span class=\"selector-class\">.container</span> <span class=\"selector-tag\">label</span> &#123;</span></span><br><span class=\"line\">    display: inline-block;</span><br><span class=\"line\">    width: 80px;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>用户登陆<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>正确的账号信息是:用户名admin,密码admin<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;userName&quot;</span>&gt;</span>用户名<span class=\"tag\">&lt;/<span class=\"name\">label</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入用户名&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;userName&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;password&quot;</span>&gt;</span>密码<span class=\"tag\">&lt;/<span class=\"name\">label</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;请输入密码&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;password&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btnLogin&quot;</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;result&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>整体分析</p>\n<ul>\n<li>传参</li>\n<li>content-type:application/x-www-form-urlencoded</li>\n</ul>\n<p>设置与不设置头的区别：</p>\n<p>一定设置请求头。</p>\n<h3 id=\"原生-ajax-中-get-和-post-区别\"><a class=\"markdownIt-Anchor\" href=\"#原生-ajax-中-get-和-post-区别\">#</a> 原生 ajax 中 get 和 post 区别</h3>\n<ul>\n<li>\n<p>get</p>\n<ul>\n<li>参数拼接在 url（ <code>url?name=1&amp;age=30</code> ）</li>\n<li>由于浏览器对 url 长度的支持（各个浏览器均不同）是有限，所以，它只能附加少量的数据。</li>\n</ul>\n</li>\n<li>\n<p>post</p>\n<ul>\n<li>要设置请求头:  <code>xhr.setRequestHeader('content-type','application/x-www-form-urlencoded')</code></li>\n<li>参数写在 send () 方法中: <code>send('name=1&amp;age=30')</code></li>\n<li>相对于 get 来说，没有传参大小的限制。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"onreadystatechange-事件和-readystate-属性\"><a class=\"markdownIt-Anchor\" href=\"#onreadystatechange-事件和-readystate-属性\">#</a> onreadystatechange 事件和 readyState 属性</h3>\n<h4 id=\"onreadystatechange-事件\"><a class=\"markdownIt-Anchor\" href=\"#onreadystatechange-事件\">#</a> onreadystatechange 事件</h4>\n<p><code>onload</code>  是 HTML5 （2014 年 9 月）以后新增的方便获取响应的事件，一些老的浏览器 (ie6,ie7,ie8) 对 onload 是不支持的。通过代码来验证这一点：以下代码在 ie6,ie7,ie8 中并不能使用。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\"><span class=\"comment\">// open 方法的第一个参数的作用就是设置请求的 method</span></span><br><span class=\"line\">xhr.open(<span class=\"string\">&quot;get&quot;</span>, <span class=\"string\">&quot;common/getCurrentTime&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">&quot;ok&quot;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">xhr.send();</span><br></pre></td></tr></table></figure>\n<p>在 html5 之前，获取服务器返回内容的时候使用的是  <code>onreadystatechange</code>  事件，这个事件是在 xhr 对象状态变化时被触发，而一次请求过程中， <code>XMLHttpRequest</code>  对象的状态会发生 <code>多次变化</code> ，也就意味着这个事件会被触发多次。</p>\n<p>onreadystatechange</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\"><span class=\"comment\">// open 方法的第一个参数的作用就是设置请求的 method</span></span><br><span class=\"line\">xhr.open(<span class=\"string\">&quot;get&quot;</span>, <span class=\"string\">&quot;common/getCurrentTime&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">// onreadystatechange</span></span><br><span class=\"line\">xhr.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;事件被触发了&quot;</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">xhr.send();</span><br></pre></td></tr></table></figure>\n<h4 id=\"xhr-对象的状态\"><a class=\"markdownIt-Anchor\" href=\"#xhr-对象的状态\">#</a>  <code>xhr</code>  对象的状态</h4>\n<p>一共有 5 种，用 <code>readyState</code>  属性表示，详见下表</p>\n<table>\n<thead>\n<tr>\n<th>readyState</th>\n<th>状态描述</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>UNSENT</td>\n<td>XHR 被创建，但尚未调用  <code>open()</code>  方法。</td>\n</tr>\n<tr>\n<td>1</td>\n<td>OPENED</td>\n<td><code>open()</code>  方法已经被调用，建立了连接。</td>\n</tr>\n<tr>\n<td>2</td>\n<td>HEADERS_RECEIVED</td>\n<td><code>send()</code>  方法已经被调用，并且已经可以获取状态行和响应头。</td>\n</tr>\n<tr>\n<td>3</td>\n<td>LOADING</td>\n<td>响应体下载中，  <code>responseText</code>  属性可能已经包含部分数据。</td>\n</tr>\n<tr>\n<td><strong>4</strong></td>\n<td><strong>DONE</strong></td>\n<td>** 响应体下载完成，可以直接使用  <code>responseText</code></td>\n</tr>\n</tbody>\n</table>\n<p>一次正常的 send () 话，xhr.readStatus 的值的变化是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 -&gt; 1 -&gt; 2 -&gt; 3 -&gt; 4</span><br></pre></td></tr></table></figure>\n<p>[外链图片转存失败，源站可能有防盗链机制，建议将图片保存下来直接上传 (img-Oax7sEsH-1581995138723)(ajax 讲义.assets/1559037455667.png)]</p>\n<h3 id=\"get-请求在-ie-中的缓存问题\"><a class=\"markdownIt-Anchor\" href=\"#get-请求在-ie-中的缓存问题\">#</a> get 请求在 IE 中的缓存问题</h3>\n<p>如下代码，在 <code>ie</code>  中运行：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">    &lt;button id=<span class=\"string\">&quot;btn&quot;</span>&gt;获取时间&lt;/button&gt;</span><br><span class=\"line\">&lt;label <span class=\"keyword\">for</span>=<span class=\"string\">&quot;&quot;</span> id=<span class=\"string\">&quot;lblTimer&quot;</span>&gt;&lt;/label&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;btn&#x27;</span>).onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(xhr.readyState);</span><br><span class=\"line\">    <span class=\"comment\">// open 方法的第一个参数的作用就是设置请求的 method</span></span><br><span class=\"line\">    xhr.open(<span class=\"string\">&#x27;get&#x27;</span>, <span class=\"string\">&#x27;common/getCurrentTime&#x27;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(xhr.readyState);</span><br><span class=\"line\">    xhr.send();</span><br><span class=\"line\">    <span class=\"comment\">// 更改事件为onreadystatechange</span></span><br><span class=\"line\">    xhr.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 表示从服务器端返回的数据已经全部ok了。</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (xhr.readyState == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;lblTimer&#x27;</span>).innerHTML = xhr.responseText;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>出现的原因：</p>\n<ul>\n<li>每次请求的地址都一样，浏览器自作聪明去使用了第一次请求的结果。</li>\n</ul>\n<p>解决方法</p>\n<ul>\n<li>\n<p>骗浏览器，让它以为 <code>每次的请求都不一样</code></p>\n</li>\n<li>\n<p><code>http://localhost:3005/common/getCurrentTime?_t=1559038330427</code></p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;btn&quot;</span>).onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(xhr.readyState);</span><br><span class=\"line\">  <span class=\"comment\">// open 方法的第一个参数的作用就是设置请求的 method</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> time = <span class=\"built_in\">Date</span>.now(); <span class=\"comment\">// 附加一个变化的值</span></span><br><span class=\"line\">  xhr.open(<span class=\"string\">&quot;get&quot;</span>, <span class=\"string\">&quot;common/getCurrentTime?_t=&quot;</span> + time);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(xhr.readyState);</span><br><span class=\"line\">  xhr.send();</span><br><span class=\"line\">  <span class=\"comment\">// 更改事件为onreadystatechange</span></span><br><span class=\"line\">  xhr.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 表示从服务器端返回的数据已经全部ok了。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (xhr.readyState == <span class=\"number\">4</span>) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;lblTimer&quot;</span>).innerHTML = xhr.responseText;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>以 <span class=\"exturl\" data-url=\"aHR0cDovL2pkLmNvbQ==\">jd.com</span> 为例 <code>loginservice.aspx</code></p>\n<h2 id=\"服务器端返回的数据格式\"><a class=\"markdownIt-Anchor\" href=\"#服务器端返回的数据格式\">#</a> 服务器端返回的数据格式</h2>\n<p>前端人员通过 ajax 请求从服务器获取数据，数据拿回来之后，可能还需要做一步的操作，例如：如果是一个数组，则要遍历数组。</p>\n<p>那么掌握服务器返回的数据的表现形式是非常重要的环节，只有知道了这些格式，我们才能更好去处理这些数据。</p>\n<p>了解服务器端返回数据在类型上的区别；会对 json 进行操作；简单了解 xml；</p>\n<p>内容：</p>\n<ul>\n<li>观察三种不同的返回值</li>\n<li>深入学习 JSON</li>\n<li>简单学习 XML</li>\n</ul>\n<h3 id=\"了解三个不同结构的字符串\"><a class=\"markdownIt-Anchor\" href=\"#了解三个不同结构的字符串\">#</a> 了解三个不同结构的字符串</h3>\n<p>引入：以 4 大名著书本信息为例，比较三种文件的回传的数据比较。</p>\n<ul>\n<li>文本：普通字符串</li>\n<li>json：json 格式的字符串</li>\n<li>xml：xml 格式的字符串</li>\n</ul>\n<p>直接在浏览器中打开三个接口，列出结果如下：</p>\n<ul>\n<li>格式 1：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">作者：吴承恩，书名：西游记；作者：施耐庵，书名：水浒传；作者：罗贯中，书名：三国演义；作者：曹雪芹，书名：红楼梦</span><br></pre></td></tr></table></figure>\n<ul>\n<li>格式 2：</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123; <span class=\"attr\">author</span>: <span class=\"string\">&quot;吴承恩&quot;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;西游记&quot;</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">author</span>: <span class=\"string\">&quot;施耐庵&quot;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;水浒传&quot;</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">author</span>: <span class=\"string\">&quot;罗贯中&quot;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;三国演义&quot;</span> &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">author</span>: <span class=\"string\">&quot;曹雪芹&quot;</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;红楼梦&quot;</span> &#125;,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n<ul>\n<li>格式 3</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">booklist</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">book</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">author</span>&gt;</span>吴承恩<span class=\"tag\">&lt;/<span class=\"name\">author</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>西游记<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">book</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">book</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">author</span>&gt;</span>施耐庵<span class=\"tag\">&lt;/<span class=\"name\">author</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>水浒传<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">book</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">book</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">author</span>&gt;</span>罗贯中<span class=\"tag\">&lt;/<span class=\"name\">author</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>三国演义<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">book</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">book</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">author</span>&gt;</span>曹雪芹<span class=\"tag\">&lt;/<span class=\"name\">author</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>红楼梦<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">book</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">booklist</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>哪一种格式的字符串更好读？为什么？</p>\n<blockquote>\n<p>Tip: 同样是作文，字迹字体也有工整之分。</p>\n</blockquote>\n<h3 id=\"json\"><a class=\"markdownIt-Anchor\" href=\"#json\">#</a> JSON</h3>\n<p>发送 ajax 请求时，从服务器端返回的数据格式要统一，这样才能让不同的后端语言，不同的前端人员都 能读懂，都方便操作，而这时，我们就可以使用 JSON 格式。</p>\n<p>它用于描述数据，它比普通字符串更具有表达力！</p>\n<h4 id=\"如何判断返回值是-json-字符串\"><a class=\"markdownIt-Anchor\" href=\"#如何判断返回值是-json-字符串\">#</a> 如何判断返回值是 JSON 字符串</h4>\n<p>观察几个真实的 JSON 数据：</p>\n<p>从服务器返回的数据都是字符串格式的，如何判断数据是 JSON 字符串格式的？</p>\n<p>[在线验证 json 格式](<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5iZWpzb24uY29tLw==\">http://www.bejson.com/</span>）</p>\n<blockquote>\n<p>tip: 直接在线进行字符串校验，判断一个字符串是不是 json 字符串。</p>\n</blockquote>\n<h4 id=\"json-是什么\"><a class=\"markdownIt-Anchor\" href=\"#json-是什么\">#</a> JSON 是什么</h4>\n<p>JSON: JavaScript Object Notation (JavaScript 对象表示法) 。</p>\n<ul>\n<li>JSON 是一种通过普通<strong>字符串</strong>描述数据的手段，用于表示有结构的数据。</li>\n<li>JSON 是轻量级的文本数据交换格式，类似 XML。</li>\n<li>JSON  <code>独立于编程语言</code>  （php,java,go,js 都会通过它来进行数据交流）</li>\n<li>JSON 具有自我描述性，更易理解</li>\n</ul>\n<h4 id=\"json-字符串常见格式\"><a class=\"markdownIt-Anchor\" href=\"#json-字符串常见格式\">#</a> JSON 字符串常见格式</h4>\n<p>作为前端人员，我们是通过调用服务器端接口的方式来获取 JSON 字符串，也就是说，我们一拿到数据，它是 JOSN 格式的，而这个 JSON 格式的数据显然是由后端同学给提供的。</p>\n<p>但是，我们也要知道如何去写出一个标准的 JSON 字符串。</p>\n<p>有如下三种情况：</p>\n<ul>\n<li>\n<p>普通字符串</p>\n</li>\n<li>\n<p>数组字符串</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;]&#x27;</span>;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>做法是：在 javascript 数组前后加上单引号，变成字符串就行。</p>\n<ul>\n<li>\n<p>对象字符串</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;&#123;\\&quot;name\\&quot;:\\&quot;curry\\&quot;,\\&quot;age\\&quot;:40&#125;&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>做法是：</p>\n<ol>\n<li>在 javascript 对象的属性名加上’双引号’（ <code>不能用单引号</code> ）;</li>\n<li>把整个对象前后加上单引号</li>\n</ol>\n<h4 id=\"json-字符串相关的两个操作\"><a class=\"markdownIt-Anchor\" href=\"#json-字符串相关的两个操作\">#</a> JSON 字符串相关的两个操作</h4>\n<ul>\n<li>\n<ol>\n<li>把 JSON 字符串转成具体某个编程语言中的数据格式；</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>在某个编程语言中，把数据格式转成 JSON 字符串；</li>\n</ol>\n</li>\n</ul>\n<p>[外链图片转存失败，源站可能有防盗链机制，建议将图片保存下来直接上传 (img-deUUB9Z2-1581995138725)(ajax 讲义.assets/1559101747981.png)]</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>从 JSON 字符串转成编程语言支持的数据</th>\n<th>从数据类型转成 JSON 字符串</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>js</td>\n<td>JSON.parse()</td>\n<td>JSON.stringify()</td>\n</tr>\n<tr>\n<td>php</td>\n<td>json_decode()</td>\n<td>json_encode()</td>\n</tr>\n<tr>\n<td>java</td>\n<td>JSON.parseObject(),JSON.parseArray()</td>\n<td>JSON.toJSONString</td>\n</tr>\n</tbody>\n</table>\n<p>js 中提供了一个静态对象 JSON 来处理 json。 它与 Math 相似，不需要 new，而是直接通过对象名。方法来调用。</p>\n<h5 id=\"jsonstringify\"><a class=\"markdownIt-Anchor\" href=\"#jsonstringify\">#</a> JSON.stringify</h5>\n<p>功能：把 js 数据，转成 JSON 格式的字符串</p>\n<p>格式： <code>var JSON字符串 = JSON.stringify(js数据)</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1.把js中的数组，对象 转成 JSON字符串</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"string\">&quot;ok&quot;</span>, <span class=\"string\">&quot;hello&quot;</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr_jsonStr = <span class=\"built_in\">JSON</span>.stringify(arr);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.info(arr, <span class=\"keyword\">typeof</span> arr);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.info(arr_jsonStr, <span class=\"keyword\">typeof</span> arr_jsonStr);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> obj = &#123; <span class=\"attr\">name</span>: <span class=\"string\">&quot;flex&quot;</span>, <span class=\"attr\">age</span>: <span class=\"number\">30</span>, <span class=\"attr\">favoriate</span>: [<span class=\"string\">&quot;篮球&quot;</span>, <span class=\"string\">&quot;前端&quot;</span>] &#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj_jsonStr = <span class=\"built_in\">JSON</span>.stringify(obj);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.info(obj, <span class=\"keyword\">typeof</span> obj);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.info(obj_jsonStr, <span class=\"keyword\">typeof</span> obj_jsonStr);</span><br></pre></td></tr></table></figure>\n<h5 id=\"jsonparse\"><a class=\"markdownIt-Anchor\" href=\"#jsonparse\">#</a> JSON.parse</h5>\n<p>功能：把 JSON 格式的字符串，还原成 JS 中的数据格式</p>\n<p>格式： <code>var JS数据 = JSON.parse(JSON字符串)</code></p>\n<h4 id=\"案例把四大名著-json-字符串以表格的形式显示\"><a class=\"markdownIt-Anchor\" href=\"#案例把四大名著-json-字符串以表格的形式显示\">#</a> 案例：把四大名著 json 字符串以表格的形式显示</h4>\n<h3 id=\"xml简单了解\"><a class=\"markdownIt-Anchor\" href=\"#xml简单了解\">#</a> XML (简单了解)</h3>\n<p>可扩展标记语言（Extensible Markup Language）。</p>\n<ul>\n<li>\n<p>XML 于 1998 年 2 月 10 日成为 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9XM0M=\">W3C</span> 的推荐标准。</p>\n</li>\n<li>\n<p>它提供了一种描述结构数据的格式，简化了网络中<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTYlOTUlQjAlRTYlOEQlQUUlRTQlQkElQTQlRTYlOEQlQTI=\">数据交换</span>和表示，使得代码、数据和表示分离，并作为数据交换的标准格式。</p>\n</li>\n<li>\n<p>独立于编程语言的。</p>\n</li>\n<li>\n<p>AJAX（异步的 javascript 和 XML）中的 X 就是 XML</p>\n</li>\n</ul>\n<h4 id=\"示例\"><a class=\"markdownIt-Anchor\" href=\"#示例\">#</a> 示例</h4>\n<p>假设这个文件的名字为 books.xml</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot; ?&gt;</span><br><span class=\"line\">&lt;booklist&gt;</span><br><span class=\"line\">&lt;book&gt;</span><br><span class=\"line\">\t&lt;author&gt;吴承恩&lt;&#x2F;author&gt;</span><br><span class=\"line\">\t&lt;name&gt;西游记&lt;&#x2F;name&gt;</span><br><span class=\"line\">&lt;&#x2F;book&gt;</span><br><span class=\"line\">&lt;book&gt;</span><br><span class=\"line\">\t&lt;author&gt;施耐庵&lt;&#x2F;author&gt;</span><br><span class=\"line\">\t&lt;name&gt;水浒传&lt;&#x2F;name&gt;</span><br><span class=\"line\">&lt;&#x2F;book&gt;</span><br><span class=\"line\">&lt;book&gt;</span><br><span class=\"line\">\t&lt;author&gt;罗贯中&lt;&#x2F;author&gt;</span><br><span class=\"line\">\t&lt;name&gt;三国演义&lt;&#x2F;name&gt;</span><br><span class=\"line\">&lt;&#x2F;book&gt;</span><br><span class=\"line\">&lt;book&gt;</span><br><span class=\"line\">\t&lt;author&gt;曹雪芹&lt;&#x2F;author&gt;</span><br><span class=\"line\">\t&lt;name&gt;红楼梦&lt;&#x2F;name&gt;</span><br><span class=\"line\">&lt;&#x2F;book&gt;</span><br><span class=\"line\">&lt;&#x2F;booklist&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"操作了解\"><a class=\"markdownIt-Anchor\" href=\"#操作了解\">#</a> 操作（了解）</h4>\n<p>如果 ajax 所请求的接口，明确规定返回值是 xml 格式，你可以通过：</p>\n<ul>\n<li>\n<p>通过 xhr.responseXML 来获取内容。</p>\n</li>\n<li>\n<p>拿到这个内容之后，就像操作 dom 元素一样去访问其中的内容。</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> books = xhr.responseXML.getElementsByTagName(<span class=\"string\">&quot;book&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> index = <span class=\"number\">0</span>; index &lt; books.length; index++) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> element = books[index];</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(element.getElementsByTagName(<span class=\"string\">&quot;author&quot;</span>)[<span class=\"number\">0</span>].innerHTML);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"xml-vs-json\"><a class=\"markdownIt-Anchor\" href=\"#xml-vs-json\">#</a> XML VS JSON</h3>\n<p>相同点：</p>\n<ul>\n<li>都用来 <code>描述数据格式</code></li>\n<li>与具体的 <code>编程语言无关</code></li>\n<li>有自己文件格式的后缀名.xml 和.json 的文件</li>\n</ul>\n<p>区别</p>\n<ul>\n<li>JSON 有简易的语法（javascript 基因）；XML 有规范的标签（html 基因）</li>\n<li>JSON 存储效率更高</li>\n</ul>\n<h2 id=\"同步和异步\"><a class=\"markdownIt-Anchor\" href=\"#同步和异步\">#</a> 同步和异步</h2>\n<p>同步和异步是面试中经常会被问到的知识点，下面我们通过 ajax 来学习这个概念。</p>\n<p>内容：</p>\n<pre><code>- 对比生活中的例子理解 同步和异步\n- 简单代码认识异步的效果\n- ajax中的异步\n- ajax中的同步\n</code></pre>\n<h3 id=\"生活中的同步异步\"><a class=\"markdownIt-Anchor\" href=\"#生活中的同步异步\">#</a> 生活中的同步异步</h3>\n<p>[外链图片转存失败，源站可能有防盗链机制，建议将图片保存下来直接上传 (img-uJBo8elU-1581995138729)(ajax 讲义.assets/1561249167046.png)]</p>\n<p>同步方式： 一个时刻只能做一件事；</p>\n<ul>\n<li>我： 写代码</li>\n<li>我：买咖啡，自己去买，花 2 小时</li>\n<li>我：写代码</li>\n</ul>\n<p>异步方式：不是一件接一件做，而是可能同时做多件事情；</p>\n<pre><code>- 我： 写代码\n- 我： 买咖啡，安排别人去买，跳过这一步，我自己不做。\n- 我： 写代码\n</code></pre>\n<h3 id=\"ajax-定义同步和异步\"><a class=\"markdownIt-Anchor\" href=\"#ajax-定义同步和异步\">#</a> ajax 定义同步和异步</h3>\n<p>原生的 ajax 中，xhr.open () 方法的第三个参数就可以决定同步和异步的方式。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xhr.open(参数<span class=\"number\">1</span> ，参数<span class=\"number\">2</span>，参数<span class=\"number\">3</span>)</span><br><span class=\"line\">- 参数<span class=\"number\">1</span> ：请求的方式.  get，post</span><br><span class=\"line\">- 参数<span class=\"number\">2</span> ：请求的url地址。</span><br><span class=\"line\">- 参数<span class=\"number\">3</span> ：是否启用异步模式，默认为<span class=\"literal\">true</span>，即异步， <span class=\"string\">`如果设置为false，就是同步`</span>。</span><br></pre></td></tr></table></figure>\n<p>以请求黑盒服务器的接口 sleep 为例（这个接口已经预先写好了，直接调用即可）</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建ajax，设置，并发送请求</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">xhr.open(<span class=\"string\">&quot;get&quot;</span>, <span class=\"string\">&quot;common/sleep&quot;</span>); <span class=\"comment\">// 第三个参数不写，默认是异步</span></span><br><span class=\"line\">xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">&quot;现在的时间是：&quot;</span>, <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toLocaleTimeString());</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">xhr.send(); <span class=\"comment\">// 发送。</span></span><br></pre></td></tr></table></figure>\n<p>改成 true 和 false 观察效果。</p>\n<h3 id=\"异步的-ajax\"><a class=\"markdownIt-Anchor\" href=\"#异步的-ajax\">#</a> 异步的 ajax</h3>\n<p>xhr.open () 默认是异步的。通过下面的代码来理解异步。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1. 先输出一行提示代码</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.info(<span class=\"string\">&quot;1  现在的时间是：&quot;</span>, <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toLocaleTimeString());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. 创建ajax，设置，并发送请求</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">xhr.open(<span class=\"string\">&quot;get&quot;</span>, <span class=\"string\">&quot;common/sleep&quot;</span>); <span class=\"comment\">// 第三个参数不写，默认是异步</span></span><br><span class=\"line\">xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">&quot;2 现在的时间是：&quot;</span>, <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toLocaleTimeString());</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">xhr.send(); <span class=\"comment\">// 发送。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 3.再输出一行提示代码</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.info(<span class=\"string\">&quot;3 现在的时间是：&quot;</span>, <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toLocaleTimeString());</span><br></pre></td></tr></table></figure>\n<p>异步执行流程：</p>\n<ul>\n<li>浏览器：输出 1</li>\n<li>浏览器：执行 send (), 发现是异步的，跳过这一步（不会阻塞代码，理解为：不用自己亲自做，找别人去做）</li>\n<li>浏览器：输出 3</li>\n</ul>\n<p>注意： <code>异步ajax时，onload，可以写在send之后</code></p>\n<h3 id=\"同步的-ajax\"><a class=\"markdownIt-Anchor\" href=\"#同步的-ajax\">#</a> 同步的 ajax</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xhr.open(参数<span class=\"number\">1</span> ，参数<span class=\"number\">2</span>，参数<span class=\"number\">3</span>)</span><br><span class=\"line\">- 参数<span class=\"number\">1</span> ：请求的方式。 get，post</span><br><span class=\"line\">- 参数<span class=\"number\">2</span> ：请求的url地址。</span><br><span class=\"line\">- 参数<span class=\"number\">3</span> ：是否启用异步模式，默认为<span class=\"literal\">true</span>，即异步， <span class=\"string\">`如果设置为false，就是同步`</span>。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xhr.open(<span class=\"string\">&#x27;get&#x27;</span>, <span class=\"string\">&#x27;common/getCurrentTime&#x27;</span>);       <span class=\"comment\">// 异步</span></span><br><span class=\"line\">xhr.open(<span class=\"string\">&#x27;get&#x27;</span>, <span class=\"string\">&#x27;common/getCurrentTime&#x27;</span>，<span class=\"literal\">true</span>); <span class=\"comment\">// 异步</span></span><br><span class=\"line\">xhr.open(<span class=\"string\">&#x27;get&#x27;</span>, <span class=\"string\">&#x27;common/getCurrentTime&#x27;</span>, <span class=\"literal\">false</span>);<span class=\"comment\">// 同步</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>同步代码中，onload 必须写在 send 之前。</p>\n</li>\n<li>\n<p>同步执行流程：</p>\n<ul>\n<li>浏览器：输出 1</li>\n<li>浏览器：执行 send (), 发现是同步， <code>只能死等</code> 。 整个代码块卡在 send 这句。</li>\n<li>浏览器：输出 3</li>\n</ul>\n</li>\n</ul>\n<p>如果你设置成了同步的方式，你会在浏览器看到如下的错误信息：</p>\n<p><code>[Deprecation] Synchronous XMLHttpRequest on the main thread is deprecated because of its detrimental effects to the end user's experience. For more help, check https://xhr.spec.whatwg.org/.</code></p>\n<p>有几个单词：</p>\n<ul>\n<li>\n<p>Synchronous: 同步的</p>\n</li>\n<li>\n<p>deprecate: 反对的，不赞成</p>\n</li>\n<li>\n<p>detrimental：有害的，不利的</p>\n</li>\n</ul>\n<p>翻译一下就是：[deprecation] 由于主线程上的同步 xmlhttpRequest 对最终用户的体验有不利影响，因此不推荐使用它。有关更多帮助，请查看 https://xhr.spec.whatwg.org/</p>\n<h2 id=\"原生-ajax-代码封装\"><a class=\"markdownIt-Anchor\" href=\"#原生-ajax-代码封装\">#</a> 原生 ajax 代码封装</h2>\n<p>对前面学习的 get 请求有 4 步，post 请求有 5 步，下面对这些代码封装，以提高效率。</p>\n<p>封装代码的工作，我们可以从实现了某个具体功能的代码出发，例如前面用到的 <code>common/get</code>  请求的例子</p>\n<p>初始代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建ajax，设置，并发送请求</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">xhr.open(<span class=\"string\">&quot;get&quot;</span>, <span class=\"string\">&quot;common/get?a=1&amp;b=2&quot;</span>);</span><br><span class=\"line\">xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">&quot;现在的时间是：&quot;</span>, <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().toLocaleTimeString());</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">xhr.send(); <span class=\"comment\">// 发送。</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"加括号变成一个函数\"><a class=\"markdownIt-Anchor\" href=\"#加括号变成一个函数\">#</a> 加括号，变成一个函数</h3>\n<p>给取一个响应的名字 <code>hiAjax</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hiAjax</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 创建ajax，设置，并发送请求</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">  xhr.open(<span class=\"string\">&quot;get&quot;</span>, <span class=\"string\">&quot;common/get?a=1&amp;b=2&quot;</span>);</span><br><span class=\"line\">  xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(xhr.responseText);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  xhr.send(); <span class=\"comment\">// 发送。</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">hiAjax();</span><br></pre></td></tr></table></figure>\n<h3 id=\"提炼出-type-参数\"><a class=\"markdownIt-Anchor\" href=\"#提炼出-type-参数\">#</a> 提炼出 type 参数</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myAjax</span>(<span class=\"params\">type</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">  xhr.open(type, <span class=\"string\">&quot;common/get?a=1&amp;b=2&quot;</span>);</span><br><span class=\"line\">  xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(xhr.responseText);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  xhr.send();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">myAjax(<span class=\"string\">&quot;get&quot;</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"提炼出-url-和-data\"><a class=\"markdownIt-Anchor\" href=\"#提炼出-url-和-data\">#</a> 提炼出 url 和 data</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myAjax</span>(<span class=\"params\">type, url, data</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (data) &#123;</span><br><span class=\"line\">    url += <span class=\"string\">&quot;?&quot;</span> + data;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  xhr.open(type, url);</span><br><span class=\"line\">  xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(xhr.responseText);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  xhr.send();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">myAjax(<span class=\"string\">&quot;get&quot;</span>, <span class=\"string\">&quot;common/get&quot;</span>, <span class=\"string\">&quot;a=1&amp;b=2&quot;</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"处理-post-请求\"><a class=\"markdownIt-Anchor\" href=\"#处理-post-请求\">#</a> 处理 post 请求</h3>\n<p>第一步：直接通过 if,else 进行两类的处理</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myAjax</span>(<span class=\"params\">type, url, data</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (type == <span class=\"string\">&quot;post&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">    xhr.open(type, url);</span><br><span class=\"line\">    xhr.setRequestHeader(<span class=\"string\">&quot;Content-type&quot;</span>, <span class=\"string\">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class=\"line\">    xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(xhr.responseText);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    xhr.send(data);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (type == <span class=\"string\">&quot;get&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (data) &#123;</span><br><span class=\"line\">      url += <span class=\"string\">&quot;?&quot;</span> + data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    xhr.open(type, url);</span><br><span class=\"line\">    xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(xhr.responseText);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    xhr.send();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">myAjax(<span class=\"string\">&quot;get&quot;</span>, <span class=\"string\">&quot;common/get&quot;</span>, <span class=\"string\">&quot;a=1&amp;b=2&quot;</span>);</span><br><span class=\"line\">myAjax(<span class=\"string\">&quot;post&quot;</span>, <span class=\"string\">&quot;common/post&quot;</span>, <span class=\"string\">&quot;a=1&amp;b=2&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>第二步：优化代码</p>\n<p>把 if,else 中的相同的代码提出来</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myAjax</span>(<span class=\"params\">type, url, data</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (type == <span class=\"string\">&quot;get&quot;</span> &amp;&amp; data) &#123;</span><br><span class=\"line\">    url += <span class=\"string\">&quot;?&quot;</span> + data;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  xhr.open(type, url);</span><br><span class=\"line\">  xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(xhr.responseText);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (type == <span class=\"string\">&quot;post&quot;</span>) &#123;</span><br><span class=\"line\">    xhr.setRequestHeader(<span class=\"string\">&quot;Content-type&quot;</span>, <span class=\"string\">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class=\"line\">    xhr.send(data);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (type == <span class=\"string\">&quot;get&quot;</span>) &#123;</span><br><span class=\"line\">    xhr.send();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">myAjax(<span class=\"string\">&quot;get&quot;</span>, <span class=\"string\">&quot;common/get&quot;</span>, <span class=\"string\">&quot;a=1&amp;b=2&quot;</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"支持回调函数\"><a class=\"markdownIt-Anchor\" href=\"#支持回调函数\">#</a> 支持回调函数</h3>\n<ul>\n<li>全局函数</li>\n<li>函数传参</li>\n</ul>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">       * 功能 ： 发出ajax请求</span></span><br><span class=\"line\"><span class=\"comment\">       * 参数：</span></span><br><span class=\"line\"><span class=\"comment\">       *    type: 类型是字符串。支持的取值是 &quot;get&quot;,&quot;post&quot;。决定ajax请求的类型</span></span><br><span class=\"line\"><span class=\"comment\">       *    data: 传给服务器的数据。支持的格式是字符串：a=1&amp;b=2&amp;c=3</span></span><br><span class=\"line\"><span class=\"comment\">       *    url : 请求的地址,</span></span><br><span class=\"line\"><span class=\"comment\">       *    sucess: 请求成功之后的回调函数。第一个参数是服务器返回的数据</span></span><br><span class=\"line\"><span class=\"comment\">       *</span></span><br><span class=\"line\"><span class=\"comment\">       * 示例：</span></span><br><span class=\"line\"><span class=\"comment\">          hiAjax(&#x27;get&#x27;, &#x27;name=ok&#x27;, &#x27;common/get&#x27;, function(result) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">              console.info(&#x27;get&#x27;, result);</span></span><br><span class=\"line\"><span class=\"comment\">          &#125;);</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">          hiAjax(&#x27;get&#x27;, &#x27;   &#x27;, &#x27;common/get&#x27;,dosomething1);</span></span><br><span class=\"line\"><span class=\"comment\">          hiAjax(&#x27;get&#x27;, &#x27;&#x27;, &#x27;common/get&#x27;,dosomething2);</span></span><br><span class=\"line\"><span class=\"comment\">       */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hiAjax</span>(<span class=\"params\">type, data, url, success</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (type === <span class=\"string\">&quot;post&quot;</span>) &#123;</span><br><span class=\"line\">    xhr.open(type, url);</span><br><span class=\"line\">    xhr.setRequestHeader(<span class=\"string\">&quot;content-type&quot;</span>, <span class=\"string\">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class=\"line\">    xhr.send(data);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (type === <span class=\"string\">&quot;get&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//如果 data有值，就在url后追加</span></span><br><span class=\"line\">    <span class=\"comment\">// trim() 用来清除字符串前后的空格</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (data.trim()) &#123;</span><br><span class=\"line\">      url = url + <span class=\"string\">&quot;?&quot;</span> + data;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    xhr.open(type, url);</span><br><span class=\"line\">    xhr.send();</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    alert(<span class=\"string\">&quot;不支持这个格式的请求:&quot;</span> + type);</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    success(xhr.responseText);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">dosomething1</span>(<span class=\"params\">result</span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(xhr.responseText);</span><br><span class=\"line\">  <span class=\"comment\">// alert(1);</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">dosomething2</span>(<span class=\"params\">result</span>) </span>&#123;</span><br><span class=\"line\">  alert(<span class=\"string\">&quot;2&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(xhr.responseText);</span><br><span class=\"line\">  <span class=\"comment\">// alert(1);</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 每个请求，从服务器中返回数据之后，都是直接在控制台中输出。</span></span><br><span class=\"line\"><span class=\"comment\">// hiAjax(&#x27;post&#x27;, &#x27;a=1&amp;b=2&#x27;, &#x27;common/post&#x27;, dosomething1);</span></span><br><span class=\"line\">hiAjax(<span class=\"string\">&quot;get&quot;</span>, <span class=\"string\">&quot;name=ok&quot;</span>, <span class=\"string\">&quot;common/get&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">result</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">&quot;get&quot;</span>, result);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">hiAjax(<span class=\"string\">&quot;get&quot;</span>, <span class=\"string\">&quot;   &quot;</span>, <span class=\"string\">&quot;common/get&quot;</span>, dosomething1);</span><br><span class=\"line\">hiAjax(<span class=\"string\">&quot;get&quot;</span>, <span class=\"string\">&quot;&quot;</span>, <span class=\"string\">&quot;common/get&quot;</span>, dosomething2);</span><br></pre></td></tr></table></figure>\n<h3 id=\"总结\"><a class=\"markdownIt-Anchor\" href=\"#总结\">#</a> 总结</h3>\n<p>封装的基本过程：</p>\n<ol>\n<li><code>埋头苦干</code>  。写出基本的，能正确运行的代码段</li>\n<li><code>一名惊人</code> 。使用 function 包裹，变成一个可以被调用的函数；</li>\n<li><code>从死到活</code> 。从具体到抽象。函数内部的固定数据抽成参数，同时写函数文档。</li>\n<li><code>黑盒测试</code> 。列出多维度的测试用例，逐一验证。</li>\n<li><code>升级优化</code>\n<ul>\n<li>目前 data 这个参数只是查询字符串的格式，是否可让它支持对象格式？</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"其它-ajax-库的使用\"><a class=\"markdownIt-Anchor\" href=\"#其它-ajax-库的使用\">#</a> 其它 ajax 库的使用</h2>\n<h3 id=\"jquery-中的-ajax-方法\"><a class=\"markdownIt-Anchor\" href=\"#jquery-中的-ajax-方法\">#</a> jquery 中的 ajax 方法</h3>\n<h4 id=\"ajax-的其它选项\"><a class=\"markdownIt-Anchor\" href=\"#ajax-的其它选项\">#</a> $.ajax 的其它选项</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.ajax(url,&#123;</span><br><span class=\"line\">  type: &#39;get&#39;,</span><br><span class=\"line\">  dataType: &#39;json&#39;,</span><br><span class=\"line\">  data: &#123; id: 1 &#125;,</span><br><span class=\"line\">  beforeSend: function (xhr) &#123;</span><br><span class=\"line\">    console.log(&#39;before send&#39;)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  success: function (data) &#123;</span><br><span class=\"line\">    console.log(data)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  error: function (xhr) &#123;</span><br><span class=\"line\">    console.log(xhr)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  complete: function (xhr) &#123;</span><br><span class=\"line\">    console.log(&#39;request completed&#39;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>常用选项参数介绍：</p>\n<ul>\n<li>\n<p>url：请求地址</p>\n</li>\n<li>\n<p>type /method：请求方法，默认为  <code>get</code></p>\n</li>\n<li>\n<p>data：需要传递到服务端的数据。字符串和对象均可。如果是对象会自动拼接成字符串</p>\n</li>\n<li>\n<p>success：请求成功之后触发</p>\n</li>\n<li>\n<p>cache: 设置 ie 浏览器的缓存问题。默认为 true，表示缓存。 cache: false 不缓存。</p>\n<p>[外链图片转存失败，源站可能有防盗链机制，建议将图片保存下来直接上传 (img-RXPLp7KP-1581995138732)(ajax 讲义.assets/1559188688467.png)]</p>\n</li>\n<li>\n<p>dataType：预期服务端返回的数据方式。如不指定，它会自动判断。</p>\n</li>\n<li>\n<p>contentType：请求体内容方式，默认  <code>application/x-www-form-urlencoded</code></p>\n</li>\n<li>\n<p>timeout：请求超时时间。</p>\n</li>\n<li>\n<p>beforeSend：请求发起之前触发</p>\n</li>\n<li>\n<p>complete：请求完成触发（不管成功与否）</p>\n</li>\n<li>\n<p>error：请求失败触发</p>\n</li>\n<li>\n<p>processData:boolean。是否让 jquery 帮助处理传到服务器的数据</p>\n</li>\n</ul>\n<h4 id=\"ajax-方法的简便用法\"><a class=\"markdownIt-Anchor\" href=\"#ajax-方法的简便用法\">#</a> $.ajax 方法的简便用法</h4>\n<ul>\n<li>$.get()</li>\n<li>$.post()</li>\n<li>$.getJSON()</li>\n</ul>\n<h5 id=\"get-的格式\"><a class=\"markdownIt-Anchor\" href=\"#get-的格式\">#</a> $.get 的格式</h5>\n<p>对于比较简单的 get 请求，jquery 提供了一个快捷方法 $.get ()</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.get(url,[,data][,success]);</span><br><span class=\"line\">参数：</span><br><span class=\"line\"> - url     ：字符串方式。指要请求的 URL 地址。</span><br><span class=\"line\"> - data    : js对象，或者字符串方式。 可选的。 指发请求带给服务器的信息。</span><br><span class=\"line\"> - success : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>)</span>&#123;&#125; 。 可选的。它是一个回调函数，当请求成功时被自动调用，它的第一个参数是从服务器返回的数据。</span><br></pre></td></tr></table></figure>\n<h5 id=\"post-的格式\"><a class=\"markdownIt-Anchor\" href=\"#post-的格式\">#</a> $.post 的格式</h5>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.post(url,[,data][,success]);</span><br><span class=\"line\">参数：</span><br><span class=\"line\">- url     ：字符串方式。指要请求的 URL 地址。</span><br><span class=\"line\">- data    : js对象，或者字符串方式。 可选的。 指发请求带给服务器的信息。</span><br><span class=\"line\">- success : function(result)&#123;&#125; 。 可选的。它是一个回调函数，当请求成功时被自动调用，它的第一个参数是从服务器返回的数据。</span><br></pre></td></tr></table></figure>\n<h5 id=\"getjson\"><a class=\"markdownIt-Anchor\" href=\"#getjson\">#</a> $.getJSON</h5>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$.getJSON(url,[,data][,success]);</span><br><span class=\"line\">参数：</span><br><span class=\"line\"> - url     ：字符串方式。指要请求的 URL 地址。</span><br><span class=\"line\"> - data    : js对象，或者字符串方式。 可选的。 指发请求带给服务器的信息。</span><br><span class=\"line\"> - success : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">json</span>)</span>&#123;&#125; 。它是一个回调函数，当请求成功时被自动调用，它的参数是从服务器返回的<span class=\"built_in\">JSON</span>数据。</span><br></pre></td></tr></table></figure>\n<h3 id=\"axios-库\"><a class=\"markdownIt-Anchor\" href=\"#axios-库\">#</a> axios 库</h3>\n<p>jquery 中封装了 ajax 功能，但是它的体积比较大。如果我们只希望使用 ajax 功能，而不需要 dom 操作的话，我们可以选择使用 axios 库。(fetch)</p>\n<p>应用：</p>\n<pre><code>- 它只专注于处理http请求，比jquery的体积小的多，适用于只需要ajax请求的业务场景；\n- 后期学习三大前端框架时也会用到；\n</code></pre>\n<h4 id=\"使用示例\"><a class=\"markdownIt-Anchor\" href=\"#使用示例\">#</a> 使用示例</h4>\n<p>通过官网查看其使用方法。</p>\n<p>与 jquery 一样，要使用它，必须先引入这个文件。然后就可以按如下的格式去使用了。</p>\n<p>中文网站：&lt;<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5heGlvcy1qcy5jb20vemgtY24vZG9jcy8=\">http://www.axios-js.com/zh-cn/docs/</span></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 获取服务器的返回值</span></span><br><span class=\"line\">axios.get(<span class=\"string\">&quot;/common/get?id=123&quot;</span>).then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// res 就是本次请求的信息</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(res);</span><br><span class=\"line\">  <span class=\"comment\">// 获取 从服务器返回的数据</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(res.data);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">axios</span><br><span class=\"line\">  .get(<span class=\"string\">&quot;/common/get&quot;</span>, &#123; <span class=\"attr\">params</span>: &#123; <span class=\"attr\">id</span>: <span class=\"number\">123</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;jake&quot;</span> &#125; &#125;)</span><br><span class=\"line\">  .then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// res 就是本次请求的信息</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.info(res);</span><br><span class=\"line\">    <span class=\"comment\">// 获取 从服务器返回的数据</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.info(res.data);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// post请求，不带参数</span></span><br><span class=\"line\">axios.post(<span class=\"string\">&quot;/common/post&quot;</span>).then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(res.data);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// post请求，带参数</span></span><br><span class=\"line\">axios.post(<span class=\"string\">&quot;/common/post&quot;</span>, &#123; <span class=\"attr\">id</span>: <span class=\"number\">123</span>, <span class=\"attr\">name</span>: <span class=\"string\">&quot;jake&quot;</span> &#125;).then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(res.data);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"是什么\"><a class=\"markdownIt-Anchor\" href=\"#是什么\">#</a> 是什么</h4>\n<p>​ Axios 是一个基于 promise 的 HTTP 库，可以用在浏览器和 node.js 中。相比 jquery 它只专注于 ajax 请求。</p>\n<ul>\n<li>特性\n<ul>\n<li>从浏览器中创建 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1hNTEh0dHBSZXF1ZXN0\">XMLHttpRequests</span></li>\n<li>从 node.js 创建 <span class=\"exturl\" data-url=\"aHR0cDovL25vZGVqcy5vcmcvYXBpL2h0dHAuaHRtbA==\">http</span> 请求</li>\n<li>支持 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvUHJvbWlzZQ==\">Promise</span> API</li>\n<li>拦截请求和响应</li>\n<li>转换请求数据和响应数据</li>\n<li>取消请求</li>\n<li>自动转换 JSON 数据</li>\n<li>客户端支持防御 <span class=\"exturl\" data-url=\"aHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9Dcm9zcy1zaXRlX3JlcXVlc3RfZm9yZ2VyeQ==\">XSRF</span></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"xmlhttprequest-20\"><a class=\"markdownIt-Anchor\" href=\"#xmlhttprequest-20\">#</a> XMLHttpRequest 2.0</h2>\n<p>XMLHttpRequest 2.0（2012 年）中的新增功能一些功能我们重点给大家介绍如下两个内容：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94aHIuc3BlYy53aGF0d2cub3JnLw==\">https://xhr.spec.whatwg.org/</span></p>\n<ul>\n<li>responseType</li>\n<li>FormData</li>\n</ul>\n<h3 id=\"responsetype-response\"><a class=\"markdownIt-Anchor\" href=\"#responsetype-response\">#</a> responseType / response</h3>\n<p>responseType：响应类型。表示对从服务器端回来数据的期待，即我们希望从服务器回来的数据是什么类型的。</p>\n<h4 id=\"使用场景\"><a class=\"markdownIt-Anchor\" href=\"#使用场景\">#</a> 使用场景</h4>\n<p>在前面使用原生的 ajax 过程中，我们提到了从服务器端获取的数据一般从 xhr.responseText 中获取，而这个值一般情况下是一个 json 字符串，所以我们要使用 JSON.parse () 来转一下这个字符串。</p>\n<p>但是，如果 <code>已经确切地知道</code> 了从服务器端回来的数据格式是 JSON 字符串，那么我们在发出 ajax 请求之前，提前去设置 xhr.responseType 属性值，这样得到的数据就可以直接从 xhr.response 中拿了。</p>\n<p>如果你已经能够知道从服务器中返回的数据类型，就可以通过:</p>\n<ol>\n<li>预先设置 xhr.responseType = “类型名”</li>\n<li>直接从 xhr.response 中拿结果</li>\n</ol>\n<h4 id=\"基本介绍\"><a class=\"markdownIt-Anchor\" href=\"#基本介绍\">#</a> 基本介绍</h4>\n<ul>\n<li>responseType – 预期服务器返回数据的类型\n<ul>\n<li>“” – 空，表示文本，和 text 一样。空为默认值</li>\n<li>text – 文本</li>\n<li>json – JSON 格式数据</li>\n<li>document – 文档对象</li>\n</ul>\n</li>\n<li>response – 根据 responseType 的值自动处理返回结果，可以接收任何类型的结果</li>\n</ul>\n<h4 id=\"示例-2\"><a class=\"markdownIt-Anchor\" href=\"#示例-2\">#</a> 示例</h4>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">xhr.open(<span class=\"string\">&quot;get&quot;</span>, <span class=\"string\">&quot;common/get?id=123&amp;name=jake&quot;</span>);</span><br><span class=\"line\">xhr.send();</span><br><span class=\"line\">xhr.responseType = <span class=\"string\">&quot;json&quot;</span>;</span><br><span class=\"line\">xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// responseText</span></span><br><span class=\"line\">  <span class=\"comment\">// 只有当responseType是&quot;&quot; 或者是&quot;text&quot;时才只可以使用；</span></span><br><span class=\"line\">  <span class=\"comment\">// console.info(typeof xhr.responseText);</span></span><br><span class=\"line\">  <span class=\"comment\">// console.info(JSON.parse(xhr.responseText));</span></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"keyword\">typeof</span> xhr.response);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(xhr.response);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>不需要再次对 xhr.responseText 进行转换</li>\n<li>不能再使用 xhr.responseText，会报错。应该使用 xhr.response</li>\n</ul>\n<h3 id=\"formdata\"><a class=\"markdownIt-Anchor\" href=\"#formdata\">#</a> FormData</h3>\n<p>FormData：表单数据（<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0Zvcm1EYXRh\">官方 api 参考</span>）。故名思义，它是用来处理 html 中与表单数据相关的操作的。</p>\n<p>在 ajax 的使用过程， 一般先要收集用户的信息，然后再把信息通过 post（或者 get）的方式传递到后端。FormData 的使用就是在收集用户信息这个部分。</p>\n<p>它主要有如下两个使用场景：</p>\n<ul>\n<li>快速收集 form 表单中元素的信息，减少表单元素的拼接，提高工作效率</li>\n<li>上传文件</li>\n</ul>\n<h4 id=\"快速获取表单中的元素值\"><a class=\"markdownIt-Anchor\" href=\"#快速获取表单中的元素值\">#</a> 快速获取表单中的元素值</h4>\n<p>静态页面代码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myform&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>姓名<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;userName&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;userName&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>密码<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;password&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;userPassword&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;userPassword&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span>性别<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;genderMale&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;userGender&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;male&quot;</span> /&gt;</span>男</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;radio&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;genderFemale&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;userGender&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;female&quot;</span> /&gt;</span>女</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;btn&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"不用-formdata\"><a class=\"markdownIt-Anchor\" href=\"#不用-formdata\">#</a> 不用 FormData</h5>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;btn&quot;</span>).onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//收集用户信息</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> userName = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;userName&quot;</span>).value;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> userPassword = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;userPassword&quot;</span>).value;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> userGender = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;genderMale&quot;</span>).checked) &#123;</span><br><span class=\"line\">    userGender = <span class=\"string\">&quot;male&quot;</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;genderFemale&quot;</span>).checked) &#123;</span><br><span class=\"line\">    userGender = <span class=\"string\">&quot;famale&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(userName, userPassword, userGender);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 通过post传值</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">  xhr.responseType = <span class=\"string\">&quot;json&quot;</span>;</span><br><span class=\"line\">  xhr.open(<span class=\"string\">&quot;post&quot;</span>, <span class=\"string\">&quot;common/post&quot;</span>);</span><br><span class=\"line\">  xhr.setRequestHeader(<span class=\"string\">&quot;Content-type&quot;</span>, <span class=\"string\">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class=\"line\">  xhr.send(</span><br><span class=\"line\">    <span class=\"string\">`userName=<span class=\"subst\">$&#123;userName&#125;</span>&amp;userPassword=<span class=\"subst\">$&#123;userPassword&#125;</span>&amp;userGender=<span class=\"subst\">$&#123;userGender&#125;</span>`</span></span><br><span class=\"line\">  );</span><br><span class=\"line\">  xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.info(xhr.response);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h5 id=\"使用-formdata\"><a class=\"markdownIt-Anchor\" href=\"#使用-formdata\">#</a> 使用 FormData</h5>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;btn&quot;</span>).onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//收集用户信息</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> fd = <span class=\"keyword\">new</span> FormData(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;myform&quot;</span>));</span><br><span class=\"line\">  <span class=\"comment\">// 通过post传值</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">  xhr.responseType = <span class=\"string\">&quot;json&quot;</span>;</span><br><span class=\"line\">  xhr.open(<span class=\"string\">&quot;post&quot;</span>, <span class=\"string\">&quot;common/post&quot;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 不用设置请求头</span></span><br><span class=\"line\">  <span class=\"comment\">// xhr.setRequestHeader(</span></span><br><span class=\"line\">  <span class=\"comment\">//   &#x27;Content-type&#x27;,</span></span><br><span class=\"line\">  <span class=\"comment\">//   &#x27;application/x-www-form-urlencoded&#x27;</span></span><br><span class=\"line\">  <span class=\"comment\">// );</span></span><br><span class=\"line\">  xhr.send(fd);</span><br><span class=\"line\">  xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.info(xhr.response);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>要注意：</p>\n<ul>\n<li>FormData 对象内部有一个键值对集合，其中的键名就是表单元素的 name 属性名，而值就是这个表单元素当前的值。</li>\n</ul>\n<h4 id=\"formdata-对象的-api\"><a class=\"markdownIt-Anchor\" href=\"#formdata-对象的-api\">#</a> FormData 对象的 api</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvemgtQ04vZG9jcy9XZWIvQVBJL0Zvcm1EYXRh\">https://developer.mozilla.org/zh-CN/docs/Web/API/FormData</span></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> fd = <span class=\"keyword\">new</span> Formdata();</span><br><span class=\"line\">fd.append(key, value);</span><br><span class=\"line\"><span class=\"comment\">// 向 FormData 中添加新的属性值，如果FormData 对应的属性值存在则覆盖原值，否则新增一项属性值。</span></span><br><span class=\"line\">fd.delete(key);</span><br><span class=\"line\"><span class=\"comment\">// 从 FormData 对象里面删除一个键值对。</span></span><br><span class=\"line\">fd.entries();</span><br><span class=\"line\"><span class=\"comment\">// 返回一个包含所有键值对的iterator对象。</span></span><br><span class=\"line\">fd.get(key);</span><br><span class=\"line\"><span class=\"comment\">//返回在 FormData 对象中与给定键关联的第一个值。</span></span><br><span class=\"line\">fd.getAll(key);</span><br><span class=\"line\"><span class=\"comment\">//返回一个包含 FormData 对象中与给定键关联的所有值的数组。</span></span><br><span class=\"line\">fd.has(key);</span><br><span class=\"line\"><span class=\"comment\">//返回一个布尔值表明 FormData 对象是否包含某些键。</span></span><br><span class=\"line\">fd.keys();</span><br><span class=\"line\"><span class=\"comment\">//返回一个包含所有键的iterator对象。</span></span><br><span class=\"line\">fd.set(key, value);</span><br><span class=\"line\"><span class=\"comment\">//给 FormData 设置属性值，如果FormData 对应的属性值存在则覆盖原值，否则新增一项属性值。</span></span><br><span class=\"line\">fd.values();</span><br><span class=\"line\"><span class=\"comment\">//返回一个包含所有值的iterator对象。</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"自定义键值对\"><a class=\"markdownIt-Anchor\" href=\"#自定义键值对\">#</a> 自定义键值对</h4>\n<p>上面的案例中，我们是从表单中快速获取所有的表单元素的值，并以键值的形式保存在 FormDate 对象中。除了这种方法之外，还可以手动决定收集哪些值，或者额外添加哪些值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//   使用FormData</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;btn&quot;</span>).onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//收集用户信息</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> fd = <span class=\"keyword\">new</span> FormData();</span><br><span class=\"line\">  <span class=\"comment\">// 数据在FormData内部是以键-值对的格式存在的.</span></span><br><span class=\"line\">  <span class=\"comment\">// 获取：值</span></span><br><span class=\"line\">  <span class=\"comment\">// 格式： fd.get(键名 )</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 向fd中追加一个键值对</span></span><br><span class=\"line\">  fd.append(<span class=\"string\">&quot;userName&quot;</span>, <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;userName&quot;</span>).value);</span><br><span class=\"line\">  fd.append(<span class=\"string\">&quot;userPassword&quot;</span>, <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;userPassword&quot;</span>).value);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> userGender = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;genderMale&quot;</span>).checked) &#123;</span><br><span class=\"line\">    userGender = <span class=\"string\">&quot;male&quot;</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;genderFemale&quot;</span>).checked) &#123;</span><br><span class=\"line\">    userGender = <span class=\"string\">&quot;famale&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  fd.append(<span class=\"string\">&quot;userGender&quot;</span>, userGender);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//console.info(fd.get(&#x27;email&#x27;));</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 通过post传值</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">  xhr.responseType = <span class=\"string\">&quot;json&quot;</span>;</span><br><span class=\"line\">  xhr.open(<span class=\"string\">&quot;post&quot;</span>, <span class=\"string\">&quot;common/post&quot;</span>);</span><br><span class=\"line\">  <span class=\"comment\">// 不用设置请求头</span></span><br><span class=\"line\">  <span class=\"comment\">// xhr.setRequestHeader(</span></span><br><span class=\"line\">  <span class=\"comment\">//   &#x27;Content-type&#x27;,</span></span><br><span class=\"line\">  <span class=\"comment\">//   &#x27;application/x-www-form-urlencoded&#x27;</span></span><br><span class=\"line\">  <span class=\"comment\">// );</span></span><br><span class=\"line\">  xhr.send(fd);</span><br><span class=\"line\">  xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.info(xhr.response);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h4 id=\"简单上传文件\"><a class=\"markdownIt-Anchor\" href=\"#简单上传文件\">#</a> 简单上传文件</h4>\n<p>在浏览器端，文件上传功能可以通过很简单的代码就能实现，而复杂的地方在服务器端。黑盒服务器已经预制了一个接口，可以用来上传文件。接口名地址是： <code>formdata/upload</code></p>\n<p>使用这个接口有两点注意：</p>\n<ul>\n<li>\n<p>这个接口只能接收 formdata 对象，并且你上传的文件信息必须是保存在名为 <code>file</code>  的键中。也就是说 input 的 name 值必须是 file 。</p>\n</li>\n<li>\n<p>app.exe 的同级目录下必须有 <code>upload</code>  文件夹。这个文件夹就是用来保存上传的文件的。</p>\n</li>\n</ul>\n<p>核心代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">&quot;container&quot;</span>&gt;</span><br><span class=\"line\">      &lt;h1&gt;FormData文件上传&lt;/h1&gt;</span><br><span class=\"line\">      &lt;form id=<span class=\"string\">&quot;myForm&quot;</span>&gt;</span><br><span class=\"line\">        &lt;label <span class=\"keyword\">for</span>=<span class=\"string\">&quot;&quot;</span>&gt;请选择你要上传的文件&lt;/label&gt;</span><br><span class=\"line\">        &lt;input type=<span class=\"string\">&quot;file&quot;</span> name=<span class=\"string\">&quot;file&quot;</span> /&gt;</span><br><span class=\"line\">      &lt;/form&gt;</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;button id=<span class=\"string\">&quot;btn&quot;</span>&gt;上传&lt;/button&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;script&gt;</span><br><span class=\"line\">      <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;btn&#x27;</span>).onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> fd = <span class=\"keyword\">new</span> FormData(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;myForm&#x27;</span>));</span><br><span class=\"line\">        <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">        xhr.open(<span class=\"string\">&#x27;post&#x27;</span>, <span class=\"string\">&#x27;formdata/upload&#x27;</span>);</span><br><span class=\"line\">        xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.info(xhr.responseText);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        xhr.send(fd);</span><br><span class=\"line\">      &#125;;</span><br><span class=\"line\">    &lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"上传文件进度条-onprogress\"><a class=\"markdownIt-Anchor\" href=\"#上传文件进度条-onprogress\">#</a> 上传文件进度条 onprogress</h4>\n<p>这个案例是在上一个案例的基础上进行拓展：让上传文件的过程可视化。</p>\n<p>核心：</p>\n<ul>\n<li>xhr 对象中有一个子对象 upload，upload 对象中有一个事件 onprogress。</li>\n<li>onprogress 事件大约每 100ms 触发一次，其回调函数第一个参数是一个事件对象，这个事件对象中有两个属性 loaded 和 total\n<ul>\n<li>loaded：表示已上传文件的大小</li>\n<li>total： 表示文件总大小</li>\n</ul>\n</li>\n</ul>\n<p>实现思路：</p>\n<ul>\n<li>\n<p>制作进度条，使用两层嵌套的 div 即可：第一层是进度条的外边框，第二层才是进度条</p>\n</li>\n<li>\n<p>每次 onprogress 事件触发时：</p>\n<ul>\n<li>都计算当前已上传文件大小的百分比</li>\n<li>根据百分比去重绘进度条长度（宽度值可以是百分比值）</li>\n</ul>\n</li>\n</ul>\n<p>参考资料：静态页面中的样式</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.outer &#123; height: 20px; background: #171b3c; border-radius: 20px; box-shadow: 0</span><br><span class=\"line\">2px 2px #4f4c4c; margin-bottom: 40px; position: relative; &#125; .inner &#123; position:</span><br><span class=\"line\">absolute; border-radius: 20px; width: 0%; height: 20px; background: #ef2d56; &#125;</span><br></pre></td></tr></table></figure>\n<p>参考资料：核心代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;btn&quot;</span>).onclick = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> innerDom = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;inner&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> fd = <span class=\"keyword\">new</span> FormData(<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;myForm&quot;</span>));</span><br><span class=\"line\">  <span class=\"keyword\">var</span> xhr = <span class=\"keyword\">new</span> XMLHttpRequest();</span><br><span class=\"line\">  xhr.open(<span class=\"string\">&quot;post&quot;</span>, <span class=\"string\">&quot;formdata/upload&quot;</span>);</span><br><span class=\"line\">  xhr.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.info(xhr.responseText);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  xhr.upload.onprogress = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">ev</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.info(<span class=\"built_in\">Date</span>.now());</span><br><span class=\"line\">    <span class=\"comment\">// 已上传 / 总大小</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.info((ev.loaded / ev.total) * <span class=\"number\">100</span> + <span class=\"string\">&quot;%&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 设置百分比值</span></span><br><span class=\"line\">    innerDom.style.width = (ev.loaded / ev.total) * <span class=\"number\">100</span> + <span class=\"string\">&quot;%&quot;</span>;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  xhr.send(fd);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"综合案例-会员管理\"><a class=\"markdownIt-Anchor\" href=\"#综合案例-会员管理\">#</a> 综合案例 - 会员管理</h2>\n<p>目标：实现一个相对复杂的功能</p>\n<ul>\n<li>会实现无限加载</li>\n<li>会用 $.ajax 发 ajax 请求</li>\n<li>会用 postman</li>\n</ul>\n<p>内容</p>\n<ul>\n<li>项目整体介绍</li>\n<li>postman 使用</li>\n<li>项目实现</li>\n</ul>\n<h3 id=\"基本介绍-2\"><a class=\"markdownIt-Anchor\" href=\"#基本介绍-2\">#</a> 基本介绍</h3>\n<h4 id=\"项目功能介绍\"><a class=\"markdownIt-Anchor\" href=\"#项目功能介绍\">#</a> 项目功能介绍</h4>\n<ul>\n<li>添加会员</li>\n<li>删除会员</li>\n<li>查看会员列表</li>\n<li>查看会员详情</li>\n<li>会员列表（无限加载）</li>\n</ul>\n<h4 id=\"项目的开发要点\"><a class=\"markdownIt-Anchor\" href=\"#项目的开发要点\">#</a> 项目的开发要点</h4>\n<ul>\n<li>前后端分离开发</li>\n<li>前端使用 bootstrap+ jquery</li>\n<li>使用 <code>postman</code>  对接口进行测试</li>\n<li>后端准备好相关接口以供前端调用</li>\n</ul>\n<h4 id=\"项目接口列表\"><a class=\"markdownIt-Anchor\" href=\"#项目接口列表\">#</a> 项目接口列表</h4>\n<ul>\n<li>list</li>\n<li>list-last</li>\n<li>detail</li>\n<li>delete</li>\n<li>add</li>\n</ul>\n<h5 id=\"接口名list\"><a class=\"markdownIt-Anchor\" href=\"#接口名list\">#</a> 接口名：list</h5>\n<p>url: /member/list</p>\n<p>功能：取出全部会员信息</p>\n<p>类型: get</p>\n<p>参数：无</p>\n<p>返回值：取到的记录列表</p>\n<h5 id=\"接口名list-last\"><a class=\"markdownIt-Anchor\" href=\"#接口名list-last\">#</a> 接口名：list-last</h5>\n<p>url: /member/list-last</p>\n<p>功能：取出从当前记录（last）之后的 6 条记录</p>\n<p>类型: get</p>\n<p>参数：</p>\n<p>​ - last: 指定的从哪条记录（id 号）开始取 。如果不设置值，就取最新的 6 个成员</p>\n<p>返回值：取到的记录列表</p>\n<p>示例：  <code>member/list-last?last=100</code>  。获取编号为 100 之后的 6 条数据</p>\n<h5 id=\"接口名detail\"><a class=\"markdownIt-Anchor\" href=\"#接口名detail\">#</a> 接口名：detail</h5>\n<p>url: /member/detail</p>\n<p>功能：获取指定编号的会员详情</p>\n<p>类型: get</p>\n<p>参数：</p>\n<p>​ - id: 会员的编号。必传。</p>\n<p>返回值：会员详情。</p>\n<h5 id=\"接口名delete\"><a class=\"markdownIt-Anchor\" href=\"#接口名delete\">#</a> 接口名：delete</h5>\n<p>url: /member/delete</p>\n<p>功能：删除指定编号的会员</p>\n<p>类型: post</p>\n<p>参数：</p>\n<p>​ - id: 会员的编号。必传</p>\n<p>返回值：无</p>\n<h5 id=\"接口名add\"><a class=\"markdownIt-Anchor\" href=\"#接口名add\">#</a> 接口名：add</h5>\n<p>url: /member/add</p>\n<p>功能：添加会员</p>\n<p>类型: post</p>\n<p>参数：</p>\n<pre><code>- name: 名字\n- avatar: 头像文件，是一个图片文件\n- bio: 介绍\n</code></pre>\n<p>返回值：{}</p>\n<p>注意： <code>必须要确保在public下面有一个upload文件夹</code></p>\n<h3 id=\"postman\"><a class=\"markdownIt-Anchor\" href=\"#postman\">#</a> postman</h3>\n<p>对于 get 类型的接口，我们可以直接在地址栏中输入地址去发请求，对于 post 请求，测试起来就不方便了。这种情况下，我们就需要专业的接口测试工具了，这里给大家推荐 postman。</p>\n<ul>\n<li>对后端提供的接口进行测试；</li>\n<li>前端必备工具；</li>\n</ul>\n<p>基本操作</p>\n<ol>\n<li>下载，安装</li>\n<li>启动</li>\n<li>测试接口</li>\n</ol>\n<p>要点：</p>\n<ul>\n<li>\n<p>选择参数</p>\n<p>[外链图片转存失败，源站可能有防盗链机制，建议将图片保存下来直接上传 (img-2lksBzee-1581995138736)(ajax 讲义.assets/1561186856276.png)]</p>\n</li>\n</ul>\n<h4 id=\"查看会员详细信息\"><a class=\"markdownIt-Anchor\" href=\"#查看会员详细信息\">#</a> 查看会员详细信息</h4>\n<ul>\n<li>整体分析\n<ul>\n<li>流程分析</li>\n<li>接口测试</li>\n</ul>\n</li>\n<li>从 url 中取值</li>\n<li>发送请求，更新页面元素</li>\n</ul>\n<h4 id=\"删除会员\"><a class=\"markdownIt-Anchor\" href=\"#删除会员\">#</a> 删除会员</h4>\n<p>思路：</p>\n<ul>\n<li>给每个删除链接上，补充成员 id。</li>\n<li>给每个删除链接上，补充’href=“javascript:;”’，这样可以阻止默认的跳转事件。</li>\n<li>给弹出框中的删除按钮添加点击事件\n<ul>\n<li>获取上面的 label 中的 id。</li>\n<li>发 ajax 请求，进行删除</li>\n</ul>\n</li>\n</ul>\n<p>重点代码：</p>\n<ol>\n<li>取消 a 标签的跳转动作</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascirpt:;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>\n<p>添加事件委托</p>\n<p>问题描述：元素是动态生成的，无法直接给元素添加点击事件。解决方法：给其父元素添加事件监听。由于元素上的事件具有冒泡特性：在子元素上的点击事件最终也会冒泡到父元素上。所以可以直接在父元素上监听。</p>\n</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;#parent&quot;</span>).on(<span class=\"string\">&quot;click&quot;</span>, <span class=\"string\">&quot;.son&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// ....</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"新增会员\"><a class=\"markdownIt-Anchor\" href=\"#新增会员\">#</a> 新增会员</h4>\n<ul>\n<li>\n<p>文件控件</p>\n</li>\n<li>\n<p>本地图片预览</p>\n</li>\n<li>\n<p>整体实现</p>\n</li>\n</ul>\n<h5 id=\"表单中的文件控件\"><a class=\"markdownIt-Anchor\" href=\"#表单中的文件控件\">#</a> 表单中的文件控件</h5>\n<ul>\n<li>multiple: 是否可以多选</li>\n<li>accept: 设置默认筛选的格式</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">multiple</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>设置只显示图片</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 只允许看到jpeg图片</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">accept</span>=<span class=\"string\">&quot;image/jpeg&quot;</span> /&gt;</span></span><br><span class=\"line\">// 只允许看到png图片</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">accept</span>=<span class=\"string\">&quot;.png&quot;</span> /&gt;</span></span><br><span class=\"line\">// 允许所有的图片</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;file&quot;</span> <span class=\"attr\">accept</span>=<span class=\"string\">&quot;image/*&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>其它类型</p>\n<table>\n<thead>\n<tr>\n<th><strong>文件类型</strong></th>\n<th><strong>accept 属性值</strong></th>\n<th><strong>类型</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>*.3gpp</td>\n<td>audio/3gpp, video/3gpp</td>\n<td>3GPP Audio/Video</td>\n</tr>\n<tr>\n<td>*.ac3</td>\n<td>audio/ac3</td>\n<td>AC3 Audio</td>\n</tr>\n<tr>\n<td>*.asf</td>\n<td>allpication/vnd.ms-asf</td>\n<td>Advanced Streaming Format</td>\n</tr>\n<tr>\n<td>*.au</td>\n<td>audio/basic</td>\n<td>AU Audio</td>\n</tr>\n<tr>\n<td>*.css</td>\n<td>text/css</td>\n<td>Cascading Style Sheets</td>\n</tr>\n<tr>\n<td>*.csv</td>\n<td>text/csv</td>\n<td>Comma Separated Values</td>\n</tr>\n<tr>\n<td>*.doc</td>\n<td>application/msword</td>\n<td>MS Word Document</td>\n</tr>\n<tr>\n<td>*.dot</td>\n<td>application/msword</td>\n<td>MS Word Template</td>\n</tr>\n<tr>\n<td>*.dtd</td>\n<td>application/xml-dtd</td>\n<td>Document Type Definition</td>\n</tr>\n<tr>\n<td>*.dwg</td>\n<td>image/vnd.dwg</td>\n<td>AutoCAD Drawing Database</td>\n</tr>\n<tr>\n<td>*.dxf</td>\n<td>image/vnd.dxf</td>\n<td>AutoCAD Drawing Interchange Format</td>\n</tr>\n<tr>\n<td>*.gif</td>\n<td>image/gif</td>\n<td>Graphic Interchange Format</td>\n</tr>\n<tr>\n<td>*.htm</td>\n<td>text/html</td>\n<td>HyperText Markup Language</td>\n</tr>\n<tr>\n<td>*.html</td>\n<td>text/html</td>\n<td>HyperText Markup Language</td>\n</tr>\n<tr>\n<td>*.jp2</td>\n<td>image/jp2</td>\n<td>JPEG-2000</td>\n</tr>\n<tr>\n<td>*.jpe</td>\n<td>image/jpeg</td>\n<td>JPEG</td>\n</tr>\n<tr>\n<td>*.jpeg</td>\n<td>image/jpeg</td>\n<td>JPEG</td>\n</tr>\n<tr>\n<td>*.jpg</td>\n<td>image/jpeg</td>\n<td>JPEG</td>\n</tr>\n<tr>\n<td>*.js</td>\n<td>text/javascript, application/javascript</td>\n<td>JavaScript</td>\n</tr>\n<tr>\n<td>*.json</td>\n<td>application/json</td>\n<td>JavaScript Object Notation</td>\n</tr>\n<tr>\n<td>*.mp2</td>\n<td>audio/mpeg, video/mpeg</td>\n<td>MPEG Audio/Video Stream, Layer II</td>\n</tr>\n<tr>\n<td>*.mp3</td>\n<td>audio/mpeg</td>\n<td>MPEG Audio Stream, Layer III</td>\n</tr>\n<tr>\n<td>*.mp4</td>\n<td>audio/mp4, video/mp4</td>\n<td>MPEG-4 Audio/Video</td>\n</tr>\n<tr>\n<td>*.mpeg</td>\n<td>video/mpeg</td>\n<td>MPEG Video Stream, Layer II</td>\n</tr>\n<tr>\n<td>*.mpg</td>\n<td>video/mpeg</td>\n<td>MPEG Video Stream, Layer II</td>\n</tr>\n<tr>\n<td>*.mpp</td>\n<td>application/vnd.ms-project</td>\n<td>MS Project Project</td>\n</tr>\n<tr>\n<td>*.ogg</td>\n<td>application/ogg, audio/ogg</td>\n<td>Ogg Vorbis</td>\n</tr>\n<tr>\n<td>*.pdf</td>\n<td>application/pdf</td>\n<td>Portable Document Format</td>\n</tr>\n<tr>\n<td>*.png</td>\n<td>image/png</td>\n<td>Portable Network Graphics</td>\n</tr>\n<tr>\n<td>*.pot</td>\n<td>application/vnd.ms-powerpoint</td>\n<td>MS PowerPoint Template</td>\n</tr>\n<tr>\n<td>*.pps</td>\n<td>application/vnd.ms-powerpoint</td>\n<td>MS PowerPoint Slideshow</td>\n</tr>\n<tr>\n<td>*.ppt</td>\n<td>application/vnd.ms-powerpoint</td>\n<td>MS PowerPoint Presentation</td>\n</tr>\n<tr>\n<td>*.rtf</td>\n<td>application/rtf, text/rtf</td>\n<td>Rich Text Format</td>\n</tr>\n<tr>\n<td>*.svf</td>\n<td>image/vnd.svf</td>\n<td>Simple Vector Format</td>\n</tr>\n<tr>\n<td>*.tif</td>\n<td>image/tiff</td>\n<td>Tagged Image Format File</td>\n</tr>\n<tr>\n<td>*.tiff</td>\n<td>image/tiff</td>\n<td>Tagged Image Format File</td>\n</tr>\n<tr>\n<td>*.txt</td>\n<td>text/plain</td>\n<td>Plain Text</td>\n</tr>\n<tr>\n<td>*.wdb</td>\n<td>application/vnd.ms-works</td>\n<td>MS Works Database</td>\n</tr>\n<tr>\n<td>*.wps</td>\n<td>application/vnd.ms-works</td>\n<td>Works Text Document</td>\n</tr>\n<tr>\n<td>*.xhtml</td>\n<td>application/xhtml+xml</td>\n<td>Extensible HyperText Markup Language</td>\n</tr>\n<tr>\n<td>*.xlc</td>\n<td>application/vnd.ms-excel</td>\n<td>MS Excel Chart</td>\n</tr>\n<tr>\n<td>*.xlm</td>\n<td>application/vnd.ms-excel</td>\n<td>MS Excel Macro</td>\n</tr>\n<tr>\n<td>*.xls</td>\n<td>application/vnd.ms-excel</td>\n<td>MS Excel Spreadsheet</td>\n</tr>\n<tr>\n<td>*.xlt</td>\n<td>application/vnd.ms-excel</td>\n<td>MS Excel Template</td>\n</tr>\n<tr>\n<td>*.xlw</td>\n<td>application/vnd.ms-excel</td>\n<td>MS Excel Workspace</td>\n</tr>\n<tr>\n<td>*.xml</td>\n<td>text/xml, application/xml</td>\n<td>Extensible Markup Language</td>\n</tr>\n<tr>\n<td>*.zip</td>\n<td>application/zip</td>\n<td>Compressed Archive</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"本地图片预览\"><a class=\"markdownIt-Anchor\" href=\"#本地图片预览\">#</a> 本地图片预览</h5>\n<p>html5 本地预览</p>\n<p>文件控件选中图片后，文件控件中会保存图片信息它的 files 属性中。files 属性是一个数组，如果只选中了一张图片，这张图片就放在 files [0] 中，如选了多张图片，则类似后推。</p>\n<p>对于这些文件信息（本例中的文件就是用户选中的图片），我们通过 <code>window.URL.createObjectURL()</code>  来创建一个临时的路径，这个路径可能是像这样：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">blob:http:<span class=\"comment\">//localhost:3005/fc517910-1300-44f3-a6e8-d52f56f34e4e</span></span><br></pre></td></tr></table></figure>\n<p>你可以通过打一个新的浏览器窗口，并在地址栏中输入这个路径来访问这张图片。注意，它只是临时的，如果你关闭了选中图片的网页，这张图片也将会不可访问。</p>\n<p>现在，我们拿到这个临时的 url 赋值给某一个 img 标签的 src 即可。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// input_avatar就是file控件的内容发生变化执行</span></span><br><span class=\"line\">$(<span class=\"string\">&quot;#input_avatar&quot;</span>).change(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// console.log(&#x27;xxx&#x27;);</span></span><br><span class=\"line\">  <span class=\"comment\">// 如果没有选择文件，返回</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">this</span>.files[<span class=\"number\">0</span>]) <span class=\"keyword\">return</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> url = URL.createObjectURL(<span class=\"built_in\">this</span>.files[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 设置图片的src</span></span><br><span class=\"line\">  $(<span class=\"string\">&quot;#avatar&quot;</span>).attr(<span class=\"string\">&quot;src&quot;</span>, url);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"上传功能开发\"><a class=\"markdownIt-Anchor\" href=\"#上传功能开发\">#</a> 上传功能开发</h5>\n<p>这里的上传不是一个简单的 post 请求，它其中包含了文件的上传，在技术选型上我们选择了 html5 中的 FormData，并使用 jquery 中的 ajax 方法来实现上传操作。</p>\n<p>这里要注意两点：</p>\n<ol>\n<li>processData:false</li>\n</ol>\n<p>不需要 jquery 去处理上传数据</p>\n<ol start=\"2\">\n<li>contentType:false</li>\n</ol>\n<p>jquery 会自动给 post 请求设置请求头，content-type:‘application-x-www-’。这种做法在大多数情况下，都是对的，但是，如果提交的数据是 formdata，就不需要去设置了。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 2. 添加会员</span></span><br><span class=\"line\"><span class=\"comment\">// 2.1 给按钮注册事件  注意，这个是提交按钮</span></span><br><span class=\"line\">$(<span class=\"string\">&quot;#btn_add&quot;</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 2.2 获取用户输入的内容，还有用户选择的文件</span></span><br><span class=\"line\">  <span class=\"comment\">// 2.3 FormData  设置请求体，可以提交二进制数据，可以上传文件</span></span><br><span class=\"line\">  <span class=\"comment\">//     xhr.send(formData);</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> fd = <span class=\"keyword\">new</span> FormData($(<span class=\"string\">&quot;#myform&quot;</span>)[<span class=\"number\">0</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 2.4 发送请求，添加数据</span></span><br><span class=\"line\">  $.ajax(&#123;</span><br><span class=\"line\">    type: <span class=\"string\">&quot;post&quot;</span>,</span><br><span class=\"line\">    url: <span class=\"string\">&quot;/member/add&quot;</span>,</span><br><span class=\"line\">    data: fd,</span><br><span class=\"line\">    processData: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 不设置content-type，而是当设置了formdata上传文件的时候，xhr对象会自动把content-type设置为multipart/form-data;</span></span><br><span class=\"line\">    contentType: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    success: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">data</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">// 判断添加是否成功...</span></span><br><span class=\"line\">      <span class=\"comment\">// 2.5 跳转回首页</span></span><br><span class=\"line\">      location.href = <span class=\"string\">&quot;/&quot;</span>;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 取消默认行为，不进行表单提交</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>案例 3：在 jquery 中使用 FormData</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">&quot;./jquery-1.8.1.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;#btn&#x27;</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 收集用户信息</span></span><br><span class=\"line\">    <span class=\"comment\">// var fd = new FormData(document.getElementById(&#x27;myForm&#x27;));</span></span><br><span class=\"line\">    <span class=\"comment\">// FormData(必须是一个dom元素) （1）</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> fd = <span class=\"keyword\">new</span> FormData($(<span class=\"string\">&#x27;#myForm&#x27;</span>)[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.info(fd);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.info(fd.get(<span class=\"string\">&#x27;userPassword&#x27;</span>));</span><br><span class=\"line\">    $.ajax(&#123;</span><br><span class=\"line\">        url: <span class=\"string\">&#x27;common/post&#x27;</span>,</span><br><span class=\"line\">        type: <span class=\"string\">&#x27;post&#x27;</span>,</span><br><span class=\"line\">        data: fd,</span><br><span class=\"line\">        processData: <span class=\"literal\">false</span>, <span class=\"comment\">// 不需要jquery去处理数据。 （2）</span></span><br><span class=\"line\">        contentType: <span class=\"literal\">false</span>, <span class=\"comment\">// 不需要默认的contentType，而采用FormData自己的 （3）</span></span><br><span class=\"line\">        success: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.info(res);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>注意：以上三个地方。</p>\n<h4 id=\"加载更多\"><a class=\"markdownIt-Anchor\" href=\"#加载更多\">#</a> 加载更多</h4>\n<ul>\n<li>\n<p>测试接口</p>\n</li>\n<li>\n<p>分析加载数据的时机</p>\n</li>\n<li>\n<p>基本完成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">全局变量来记录最大的last值</span><br><span class=\"line\">&#x2F;&#x2F; 注册滚动的事件</span><br><span class=\"line\">$(window).scroll(function () &#123;</span><br><span class=\"line\">   &#x2F;&#x2F; 判断当前是否正在加载数据，如果正在加载数据，就不要再次发送请求了</span><br><span class=\"line\">   if (loading) return;</span><br><span class=\"line\">   &#x2F;&#x2F; 获取文档的高度</span><br><span class=\"line\">  var documentH &#x3D; $(document).height();</span><br><span class=\"line\">  &#x2F;&#x2F; 获取浏览器窗口的高度</span><br><span class=\"line\">  var windowH &#x3D; $(window).height();</span><br><span class=\"line\">  &#x2F;&#x2F; 文档滚动出去的距离</span><br><span class=\"line\">  var scrollTop &#x3D; $(document).scrollTop();</span><br><span class=\"line\">  &#x2F;&#x2F; 判断当前滚动条距离底部的距离是否 &lt;&#x3D; 100，加载更多数据</span><br><span class=\"line\">  if (documentH - windowH - scrollTop &lt;&#x3D; 100) &#123;</span><br><span class=\"line\">    &#x2F;&#x2F; 加载更多</span><br><span class=\"line\">    loadData();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>优化</p>\n<ul>\n<li>不要重复发请求</li>\n<li>loading 效果</li>\n<li>数据全部加载完成之后的处理</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"模板引擎\"><a class=\"markdownIt-Anchor\" href=\"#模板引擎\">#</a> 模板引擎</h3>\n<p>目标：</p>\n<ul>\n<li>理解模板引擎的作用；</li>\n<li>会用模板引擎；</li>\n</ul>\n<h4 id=\"作用-2\"><a class=\"markdownIt-Anchor\" href=\"#作用-2\">#</a> 作用</h4>\n<p>​ 把数据生成页面，这个过程叫渲染。</p>\n<p>[外链图片转存失败，源站可能有防盗链机制，建议将图片保存下来直接上传 (img-SUJ5N7ko-1581995138737)(D:\\prepare\\fanyoufu\\01-ajax\\ 笔记 \\ 讲义.assets\\1558772178540.png)]</p>\n<p>如果数据结构简单，可以直接通过字符串操作（拼接）的方式处理，但是如果数据过于复杂，字符串拼接维护成本太大，就不太适用，此时就可以使用模板引擎。模板引擎内部支持循环，选择，判断等高级的功能。</p>\n<blockquote>\n<p>模板引擎：</p>\n<ul>\n<li>artTemplate：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hdWkuZ2l0aHViLmlvL2FydC10ZW1wbGF0ZS8=\">https://aui.github.io/art-template/</span></li>\n<li>中文教程：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5qcTIyLmNvbS9qcXVlcnktaW5mbzEwOTc=\">http://www.jq22.com/jquery-info1097</span></li>\n</ul>\n</blockquote>\n<p>模板引擎实际上就是一个 API，模板引擎有很多种，使用方式大同小异，目的是更容易更高效地将数据渲染到 HTML 字符串中。</p>\n<h4 id=\"使用模板引擎步骤\"><a class=\"markdownIt-Anchor\" href=\"#使用模板引擎步骤\">#</a> 使用模板引擎步骤</h4>\n<ol>\n<li>引入 template-web.js 文件</li>\n<li>定义模板（具体语法可以去官网查看），指定 script 的 id 和 type 属性</li>\n<li>准备数据。(变量，数组等)</li>\n<li>调用 template 函数，为模板分配数据，template 函数有两个参数一个返回值\n<ol>\n<li>参数 1：模板的 id</li>\n<li>参数 2：分配的数据，必须是一个 JS 对象的形式</li>\n<li>一个返回值：是数据和模板标签组合好的结果</li>\n</ol>\n</li>\n<li>将 “拼接” 好的结果放回 dom 容量中</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;content&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- 准备一个存放数据的位置 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 1. 引入template-web.js --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/template-web.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 2. 定义模板（注意script标签的id和type必须指定） --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;test&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/html&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"handlebars\"><span class=\"xml\">  <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span></span><span class=\"template-variable\">&#123;&#123;<span class=\"name\">data</span>&#125;&#125;</span><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">// 3. 替换模板</span></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">// test对应上面script标签的id</span></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">// data对应上面script标签中使用的$data</span></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"keyword\">var</span> html = template(<span class=\"string\">&quot;test&quot;</span>, &#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    data: <span class=\"string\">&quot;hello world&quot;</span>,</span></span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"comment\">// 4. 将替换好的html放到指定位置</span></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&quot;content&quot;</span>).innerHTML = html;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>注意：</p>\n<ul>\n<li>定义模板时的 script 标签一定好指定 id 和 type</li>\n<li>tempalte 函数语法： <code>var html = template(模板id, Object)</code></li>\n</ul>\n<h4 id=\"模板语法\"><a class=\"markdownIt-Anchor\" href=\"#模板语法\">#</a> 模板语法</h4>\n<h5 id=\"输出普通数据字符串数值\"><a class=\"markdownIt-Anchor\" href=\"#输出普通数据字符串数值\">#</a> 输出普通数据（字符串，数值）</h5>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 模块写法</span><br><span class=\"line\">&#123;&#123; var &#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; template 函数写法</span><br><span class=\"line\">var html &#x3D; template(&#39;id&#39;, &#123;</span><br><span class=\"line\">\tvar： &#39;hello world&#39;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h5 id=\"条件\"><a class=\"markdownIt-Anchor\" href=\"#条件\">#</a> 条件</h5>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 模板写法</span></span><br><span class=\"line\">&#123;&#123;<span class=\"keyword\">if</span> age &gt; <span class=\"number\">18</span>&#125;&#125;</span><br><span class=\"line\">\t大于<span class=\"number\">18</span></span><br><span class=\"line\">&#123;&#123;<span class=\"keyword\">else</span>&#125;&#125;</span><br><span class=\"line\">\t小于<span class=\"number\">18</span></span><br><span class=\"line\">&#123;&#123;/<span class=\"keyword\">if</span>&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// template函数写法</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> html = template(<span class=\"string\">&#x27;id&#x27;</span>, &#123;</span><br><span class=\"line\">    age: <span class=\"number\">20</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h5 id=\"循环\"><a class=\"markdownIt-Anchor\" href=\"#循环\">#</a> 循环</h5>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 模板写法1</span><br><span class=\"line\">&#123;&#123;each arr&#125;&#125;</span><br><span class=\"line\">\t&#123;&#123;$index&#125;&#125; -- 数组的下标</span><br><span class=\"line\">\t&#123;&#123;$value&#125;&#125; -- 数组的值</span><br><span class=\"line\">&#123;&#123;&#x2F;each&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 模板写法1</span><br><span class=\"line\">&#123;&#123;each arr item idx&#125;&#125;</span><br><span class=\"line\">\t&#123;&#123;idx&#125;&#125; -- 数组的下标</span><br><span class=\"line\">\t&#123;&#123;item&#125;&#125; -- 数组的值</span><br><span class=\"line\">&#123;&#123;&#x2F;each&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; template函数写法</span><br><span class=\"line\">var html &#x3D; template(&#39;id&#39;, &#123;</span><br><span class=\"line\">    arr: [&#39;apple&#39;, &#39;banana&#39;, &#39;orange&#39;]</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "about"
            ]
        }
    ]
}